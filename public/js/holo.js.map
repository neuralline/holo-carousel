{"version":3,"file":"holo.js","sources":["../../node_modules/.pnpm/cyre@3.1.4/node_modules/cyre/dist/umd/cyre.js","../../src/config/holo-config.ts","../../src/libs/holo-dom.ts","../../src/components/orientation-handler.ts","../../src/libs/holo-navigation.ts","../../src/core/holo-events.ts","../../src/libs/holo-essentials.ts","../../src/components/holo-relations.ts","../../src/components/holo-touch.ts","../../src/components/holo-deep-link.ts","../../src/components/holo-accordion.ts","../../src/components/holo-io-manager.ts","../../src/core/holo-state.ts","../../src/components/holo-create-element.ts","../../src/core/holo-performance.ts","../../src/libs/debug.ts","../../src/app.ts"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).cyre=e.cyre||{})}(this,(function(e){\"use strict\";const t={reset:\"\u001b[0m\",magenta:\"\u001b[35m\",magentaBright:\"\u001b[95m\",red:\"\u001b[31m\",redBright:\"\u001b[91m\",green:\"\u001b[32m\",greenBright:\"\u001b[92m\",cyan:\"\u001b[36m\",cyanBright:\"\u001b[96m\",yellow:\"\u001b[33m\",yellowBright:\"\u001b[93m\",white:\"\u001b[37m\",whiteBright:\"\u001b[97m\",blue:\"\u001b[34m\",blueBright:\"\u001b[94m\",bgRed:\"\u001b[41m\",bgYellow:\"\u001b[43m\",bgBlue:\"\u001b[44m\",bold:\"\u001b[1m\",dim:\"\u001b[2m\",italic:\"\u001b[3m\",underline:\"\u001b[4m\"},r={DEBUG:[\"dim\",\"cyan\"],INFO:[\"blue\",\"bold\"],WARN:[\"yellowBright\",\"bold\"],ERROR:[\"redBright\",\"bold\"],SUCCESS:[\"greenBright\",\"bold\"]},o=\"undefined\"!=typeof process&&process.versions&&process.versions.node,i=\"undefined\"!=typeof window;const a={DEBUG:0,INFO:1,WARN:2,ERROR:3,SUCCESS:1},n=(e,r,n)=>(s,c=!0,u=!1)=>{if(a[e]<a.DEBUG)return;const l=((e,t,r)=>`${r?`[${(new Date).toISOString()}]`:\"\"} ${e}: ${t instanceof Error?`${t.message}\\n${t.stack}`:\"object\"==typeof t?JSON.stringify(t,null,2):String(t)}`)(e,s,c);if(u||i){const t=\"ERROR\"===e?\"color: red; font-weight: bold\":\"WARN\"===e?\"color: orange; font-weight: bold\":\"SUCCESS\"===e?\"color: green; font-weight: bold\":\"INFO\"===e?\"color: blue\":\"color: gray\";console[n](`%c${l}`,t)}else if(o){const e=r.reduce(((e,r)=>`${t[r]}${e}`),l);process.stdout.write(`${e}${t.reset}\\n`)}},s={error:n(\"ERROR\",r.ERROR,\"error\"),warn:n(\"WARN\",r.WARN,\"warn\"),info:n(\"INFO\",r.INFO,\"log\"),debug:n(\"DEBUG\",r.DEBUG,\"debug\"),success:n(\"SUCCESS\",r.SUCCESS,\"log\")},c=e=>{const t=new WeakMap;return(...r)=>{const o=r[0];return\"object\"==typeof o&&null!==o?(t.has(o)||t.set(o,e(...r)),t.get(o)):e(...r)}},u=(e,...t)=>t.reduce(((e,t)=>t(e)),e),l=(e,t)=>{if(Object.is(e,t))return!0;if(\"object\"!=typeof e||\"object\"!=typeof t||null===e||null===t)return!1;if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,r)=>l(e,t[r])));const r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((r=>l(e[r],t[r])))},d={RECUPERATION:6e4,MAX_TIMEOUT:Math.pow(2,31)-1},m=\"@cyre: System is offline\",p=\"@cyre: System is online\",g=\"@cyre: Welcome! How can I assist you?\",f=\"Failed to prepare action: invalid configuration\",y=\"Failed to execute action: runtime error\",h=\"Action skipped: no payload changes detected\",b=\"Failed to create channel: configuration error\",v=\"Channel created successfully\",E=\"Invalid channel data definition\",k=\"Channel ID is required\",I=\"Channel type is required\",T=\"Invalid channel type specified\",w=\"Invalid channel structure: check configuration\",R=\"Invalid subscription parameters provided\",A=\"Subscriber exists - updating configuration\",M=\"Successfully subscribed to event\",$=\"Invalid event handler provided\",C=\"Subscription failed: check configuration\",x=\"Call failed: system is offline\",O=\"Call failed: invalid action ID\",S=\"Call failed: action not responding\",D=\"Dispatch failed: no subscriber found for this type\",N=\"Q0.0U0.0A0.0N0.0T0.0U0.0M0 - I0.0N0.0C0.0E0.0P0.0T0.0I0.0O0.0N0.0S0-- \",q={MIN:50,BASE:200,MAX:1e3,RECOVERY:2e3},U={HIGH:.9,CRITICAL:.95},B={MAX_CPU:80,MAX_MEMORY:85,MAX_EVENT_LOOP:50,MAX_CALL_RATE:1e3},_={system:{cpu:0,memory:0,eventLoop:0,isOverloaded:!1},breathing:{breathCount:0,currentRate:q.BASE,lastBreath:Date.now(),stress:0,isRecuperating:!1,recuperationDepth:0,pattern:\"NORMAL\",nextBreathDue:Date.now()+q.BASE},performance:{callsTotal:0,callsPerSecond:0,lastCallTimestamp:Date.now(),activeQueues:{critical:0,high:0,medium:0,low:0,background:0},queueDepth:0},stress:{cpu:0,memory:0,eventLoop:0,callRate:0,combined:0},lastUpdate:Date.now(),inRecuperation:!1,hibernating:!1,activeFormations:0},F=()=>{const e=new Map;return{get:t=>e.get(t),set:(t,r)=>{e.set(t,r),e.size>1e3&&Array.from(e.keys()).slice(0,e.size-1e3).forEach((t=>e.delete(t)))},forget:t=>e.delete(t),clear:()=>e.clear(),getAll:()=>Array.from(e.values()),size:()=>e.size}},L=F();L.set(\"quantum\",_);const P=c(((e,t)=>{const r=Math.min(1,(e.cpu||0)/(.7*B.MAX_CPU)),o=Math.min(1,(e.memory||0)/(.7*B.MAX_MEMORY)),i=Math.min(1,(e.eventLoop||0)/(.7*B.MAX_EVENT_LOOP)),a=Math.min(1,(t.callsPerSecond||0)/(.7*B.MAX_CALL_RATE)),n=Math.max(r,o,i,a);return{cpu:r,memory:o,eventLoop:i,callRate:a,combined:Math.min(1,(r+o+i+a+2*n)/6)}})),X=e=>{if(e>=U.CRITICAL)return q.RECOVERY;const t=Math.exp(e)-1;return Math.max(q.MIN,Math.min(q.MAX,q.BASE*(1+t)))},j={inRecuperation:!1,hibernating:!1,activeFormations:0,recuperationInterval:void 0,get:()=>{const e=L.get(\"quantum\");return Object.freeze({...e,inRecuperation:j.inRecuperation,hibernating:j.hibernating,activeFormations:j.activeFormations})},update:e=>{const t={...L.get(\"quantum\"),...e,lastUpdate:Date.now(),inRecuperation:e.inRecuperation??j.inRecuperation,hibernating:e.hibernating??j.hibernating,activeFormations:e.activeFormations??j.activeFormations};return(e.system||e.performance)&&(t.stress=P(t.system,t.performance)),L.set(\"quantum\",t),t},updateBreath:e=>{const t=L.get(\"quantum\"),r=P(e,t.performance),o=Date.now(),i={...t.breathing,breathCount:t.breathing.breathCount+1,lastBreath:o,stress:r.combined,currentRate:X(r.combined),nextBreathDue:o+X(r.combined),isRecuperating:r.combined>U.HIGH,recuperationDepth:Math.min(1,r.combined),pattern:r.combined>U.HIGH?\"RECOVERY\":\"NORMAL\"};return j.update({system:e,breathing:i,stress:r,inRecuperation:i.isRecuperating})},recordCall:(e=\"medium\")=>{const t=L.get(\"quantum\"),r=Date.now(),o=r-t.performance.lastCallTimestamp>=1e3?1:t.performance.callsPerSecond+1,i={...t.performance,callsTotal:t.performance.callsTotal+1,callsPerSecond:o,lastCallTimestamp:r,activeQueues:{...t.performance.activeQueues,[e]:t.performance.activeQueues[e]+1},queueDepth:t.performance.queueDepth+1};return j.update({performance:i})},isHealthy:()=>{const e=L.get(\"quantum\");return!e.breathing.isRecuperating&&e.stress.combined<U.HIGH},shouldAllowCall:e=>{const t=L.get(\"quantum\");return t.breathing.isRecuperating?\"critical\"===e:t.stress.combined<U.HIGH||\"critical\"===e||\"high\"===e},reset:()=>{j.inRecuperation=!1,j.hibernating=!1,j.activeFormations=0,j.recuperationInterval&&(clearTimeout(j.recuperationInterval),j.recuperationInterval=void 0),L.set(\"quantum\",_)},forget:e=>{L.forget(e)}},H=F(),V=F(),G=F(),z=F(),W=F(),Y=e=>{const t=W.get(e);t?.intervalId&&clearInterval(t.intervalId),W.forget(e),z.forget(e)},Q=e=>{if(!e?.id)throw new Error(\"IO must have an id\");try{const t={...e,timestamp:Date.now(),type:e.type||e.id};Y(e.id),H.set(e.id,t),W.set(e.id,{lastExecutionTime:Date.now(),executionCount:0,errors:[]}),e.detectChanges&&z.set(e.id,e.payload),j.recordCall(e.priority?.level)}catch(t){throw s.error(`Failed to set IO: ${t instanceof Error?t.message:String(t)}`),t}},J=e=>H.get(e),K=e=>(Y(e),H.forget(e)),Z=()=>{H.getAll().forEach((e=>{e.id&&Y(e.id)})),z.clear(),W.clear(),H.clear(),j.reset()},ee=(e,t)=>{const r=z.get(e);return!l(t,r)},te=e=>z.get(e),re=e=>W.get(e),oe=e=>{if(!e?.id||!e?.fn)throw new Error(\"Invalid subscriber format\");V.set(e.id,e)},ie=e=>V.get(e),ae=()=>V.clear(),ne=e=>{e.id&&G.set(e.id,e)},se=e=>G.get(e),ce=e=>{const t=G.get(e);return t?.timeoutId&&clearTimeout(t.timeoutId),G.forget(e)},ue=()=>{G.getAll().forEach((e=>{e.timeoutId&&clearTimeout(e.timeoutId)})),G.clear()},le=()=>G.getAll(),de=()=>G.getAll().filter((e=>\"active\"===e.status)),me=e=>e.type&&e.id?{...e,ok:!0,status:\"active\"}:{...e,ok:!1,done:!1,status:\"error\",error:\"Missing required fields: type or id\"},pe=e=>{if(!e.detectChanges)return e;return ee(e.id,e.payload)?e:{...e,ok:!0,done:!0,status:\"skipped\",skipped:!0,skipReason:h}},ge=e=>{if(e.skipped||\"error\"===e.status)return e;try{const t=ie(e.id);if(!t)throw new Error(\"No subscriber found\");const r=t.fn(e.payload);return r&&\"object\"==typeof r&&\"id\"in r?{...e,ok:!0,done:!0,status:\"completed\",intraLink:{id:r.id,payload:r.payload}}:{...e,ok:!0,done:!0,status:\"completed\"}}catch(t){return s.error(`${y}: ${t}`),{...e,ok:!1,done:!1,status:\"error\",error:t instanceof Error?t.message:String(t)}}},fe=(e,t)=>{if(!e)return s.error(f),{id:\"\",type:\"\",ok:!1,done:!1,status:\"error\",error:f};try{return u((e=>{try{if(!e)throw new Error(f);return{...e,ok:!0,done:!1,status:\"pending\",timestamp:Date.now()}}catch(t){return{id:\"\",type:\"\",ok:!1,done:!1,status:\"error\",error:f}}})(e),me,pe,ge,(e=>\"error\"===e.status?e:(e=>(e.log&&(\"error\"===e.status?s.error(e):(e.status,s.info(e))),e))(e)),(e=>\"error\"===e.status?e:(e=>(e.ok&&!e.skipped&&Q({...e,timestamp:Date.now()}),e))(e)))}catch(r){return s.error(`Action processing failed: ${r}`),{...e,ok:!1,done:!1,status:\"error\",error:r instanceof Error?r.message:String(r)}}},ye=c((e=>e?e.id?e.type||e.id?e.type&&\"string\"!=typeof e.type?{isValid:!1,error:T}:{isValid:!0}:{isValid:!1,error:I}:{isValid:!1,error:k}:{isValid:!1,error:w})),he=(e,t)=>{try{if(!(\"object\"==typeof(r=e)&&null!==r&&\"id\"in r&&\"string\"==typeof r.id&&r.id.length>0))return s.error(w),{ok:!1,message:w};const o=ye(e);if(!o.isValid)return s.error(o.error),{ok:!1,message:o.error};if(!((e,t)=>!t||Object.entries(t).filter((([e,t])=>t(void 0).required)).map((([e])=>e)).every((t=>t in e)))(e,t))return s.error(E),{ok:!1,message:E};const i=((e,t)=>{try{const r={...e},o=[];for(const[i,a]of Object.entries(e)){const e=t[i];if(!e){r[i]=a;continue}const n=e(a);if(!n.ok){if(n.required)return{ok:!1,message:`Required field '${i}' validation failed: ${n.message}`,payload:r};o.push(`${i}: ${n.message}`)}r[i]=n.payload}for(const[i,a]of Object.entries(t))if(a(void 0).required&&!(i in e))return{ok:!1,message:`Missing required field: ${i}`,payload:r};return o.length>0?{ok:!1,message:o.join(\"; \"),payload:r}:{ok:!0,payload:r}}catch(r){const e=r instanceof Error?r.message:String(r);return s.error(`Data definition processing failed: ${e}`),{ok:!1,message:E}}})(e,t);if(!i.ok)return i;const a=(e=>{const t=Date.now();return{...e,type:e.type||e.id,timestamp:t,interval:e.interval||0,timeOfCreation:e.timeOfCreation||t}})({...i.payload,id:e.id});return s.success(v),{ok:!0,message:v,payload:a}}catch(o){const e=o instanceof Error?o.message:String(o);return s.error(`Channel processing failed: ${e}`),{ok:!1,message:b}}var r},be=(e,t)=>{try{const r=((e,t)=>e&&\"string\"==typeof e?\"function\"!=typeof t?{ok:!1,message:$,error:{code:\"INVALID_HANDLER\",message:\"Event handler must be a function\"}}:{ok:!0,message:M,subscriber:{id:e.trim(),fn:t}}:{ok:!1,message:T,error:{code:\"INVALID_TYPE\",message:`Type must be a non-empty string, received: ${e}`}})(e,t);if(!r.ok||!r.subscriber)return s.error(r.error||r.message),{ok:!1,message:r.message};const{subscriber:o}=r;return ie(o.id)&&s.info(`${o.id}: ${A}`),oe(o),s.info(`${M}: ${o.id}`),{ok:!0,message:`${M}: ${o.id}`}}catch(r){const e=r instanceof Error?r.message:String(r);return s.error(`Failed to add subscriber: ${e}`),{ok:!1,message:C}}},ve=(e,t)=>Array.isArray(e)?(e=>{try{const t=e.map((e=>{if(!e.id||!e.fn)return s.error(`Invalid subscriber format: ${JSON.stringify(e)}`),!1;try{return oe(e),!0}catch(t){return s.error(`Failed to add subscriber ${e.id}: ${t}`),!1}})).filter(Boolean).length,r=e.length;return 0===t?{ok:!1,message:`Failed to add any subscribers out of ${r}`}:{ok:!0,message:`Successfully added ${t} out of ${r} subscribers`}}catch(t){const e=t instanceof Error?t.message:String(t);return s.error(`Batch subscription failed: ${e}`),{ok:!1,message:C}}})(e):\"string\"==typeof e&&t?be(e,t):(s.error(R),{ok:!1,message:R}),Ee=async e=>{if(!e||!e.id)return;const t=performance.now(),r=se(e.id);if(r&&r.isActive)try{await e.callback();const o=performance.now()-t;r.metrics.totalExecutions++,r.metrics.successfulExecutions++,r.metrics.lastExecutionTime=o,r.metrics.longestExecutionTime=Math.max(r.metrics.longestExecutionTime,o),r.metrics.shortestExecutionTime=Math.min(r.metrics.shortestExecutionTime,o),r.metrics.averageExecutionTime=(r.metrics.averageExecutionTime*(r.metrics.totalExecutions-1)+o)/r.metrics.totalExecutions,r.executionCount++,r.lastExecutionTime=Date.now(),!0!==r.repeat&&\"number\"==typeof r.repeat&&(r.repeat=r.repeat-1),ne(r),!0===r.repeat||\"number\"==typeof r.repeat&&r.repeat>0?Ie(r):ce(r.id)}catch(o){const t=se(e.id);t&&(t.metrics.failedExecutions++,ne(t)),s.error(`Timer execution failed: ${o}`)}},ke=e=>{if(!e||!e.id)return;const t=e.duration>d.RECUPERATION?d.RECUPERATION:Math.max(e.duration/10,1e3);let r,o=Date.now();const i=()=>{const a=se(e.id);if(!a||!a.isActive)return void clearTimeout(r);const n=Date.now(),s=j.get(),c=1+(s.stress?.combined||0);if(n-o>t||Math.abs(c-1)>.1){const e=a.originalDuration-a.executionCount*d.MAX_TIMEOUT;a.duration=Math.min(e,d.MAX_TIMEOUT)*c,a.nextExecutionTime=n+a.duration,ne(a),o=n}s.hibernating||\"active\"!==a.status||(r=setTimeout(i,t),a.recuperationInterval=r,ne(a))};return r=setTimeout(i,t),r},Ie=e=>{if(!e||!e.id)return;const t=j.get();if(t.hibernating)return;const r=Date.now(),o=1+(t.stress?.combined||0),i=se(e.id);if(!i||!i.isActive)return;if(i.executionCount>1e4)return s.error(\"Maximum execution count exceeded\"),void ce(i.id);let a=i.duration*o;if(i.isInRecuperation){const e=i.originalDuration-i.executionCount*d.MAX_TIMEOUT;a=Math.min(e*o,d.MAX_TIMEOUT),i.duration=a,i.duration>d.RECUPERATION&&(i.recuperationInterval&&clearTimeout(i.recuperationInterval),i.recuperationInterval=ke(i)),e<=d.MAX_TIMEOUT&&(i.isInRecuperation=!1)}else i.duration=a;i.nextExecutionTime=r+i.duration,i.timeoutId&&clearTimeout(i.timeoutId);const n=\"undefined\"!=typeof process&&\"test\"===process.env.NODE_ENV;i.timeoutId=n?setTimeout((()=>Ee(i)),i.duration):i.duration<25?((e,t)=>{if(\"undefined\"!=typeof process&&\"test\"===process.env.NODE_ENV)return setTimeout(e,t);const r=process.hrtime(),o=()=>{const[i,a]=process.hrtime(r),n=1e3*i+a/1e6;if(n>=t)e();else{const e=t-n;e<1?setImmediate(o):e<25?setTimeout(o,0):setTimeout(o,Math.floor(e/2))}};return setTimeout(o,0)})((()=>Ee(i)),i.duration):setTimeout((()=>Ee(i)),i.duration),ne(i)},Te=(e,t,r,o=crypto.randomUUID())=>{try{const i=\"number\"==typeof e?e:(e=>24*(e.days||0)*60*60*1e3+60*(e.hours||0)*60*1e3+60*(e.minutes||0)*1e3+1e3*(e.seconds||0)+(e.milliseconds||0))(e),a=((e,t,r,o)=>{if(!e||\"number\"!=typeof t||\"function\"!=typeof r)throw new Error(\"Invalid formation parameters\");const i=Date.now(),a=t>=d.MAX_TIMEOUT,n=j.get(),s=1+(n.stress?.combined||0),c={id:e,startTime:i,duration:a?d.MAX_TIMEOUT:t*s,originalDuration:t,callback:r,repeat:o,executionCount:0,lastExecutionTime:0,nextExecutionTime:i+(a?d.MAX_TIMEOUT:t*s),isInRecuperation:a,status:\"active\",isActive:!0,metrics:{totalExecutions:0,successfulExecutions:0,failedExecutions:0,averageExecutionTime:0,lastExecutionTime:0,longestExecutionTime:0,shortestExecutionTime:1/0,missedExecutions:0}};return a&&(c.recuperationInterval=ke(c)),c})(o,i,t,r);return ne(a),Ie(a),{kind:\"ok\",value:a}}catch(i){return{kind:\"error\",error:i instanceof Error?i:new Error(\"Timer creation failed\")}}},we=e=>{if(e){const t=se(e);t&&(t.timeoutId&&clearTimeout(t.timeoutId),t.recuperationInterval&&clearTimeout(t.recuperationInterval),t.status=\"paused\",t.isActive=!1,ne(t))}else le().forEach((e=>{e.timeoutId&&clearTimeout(e.timeoutId),e.recuperationInterval&&clearTimeout(e.recuperationInterval),e.status=\"paused\",e.isActive=!1,ne(e)}))},Re=e=>{if(!j.get().hibernating)if(e){const t=se(e);t&&\"paused\"===t.status&&(t.status=\"active\",t.isActive=!0,ne(t),Ie(t))}else le().forEach((e=>{\"paused\"===e.status&&(e.status=\"active\",e.isActive=!0,ne(e),Ie(e))}))},Ae=()=>{j.update({hibernating:!0}),le().forEach((e=>{e.timeoutId&&clearTimeout(e.timeoutId),e.recuperationInterval&&clearTimeout(e.recuperationInterval)})),ue()},Me={id:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:null,message:`action.id must be a string. Received '${e}'`,required:!0},type:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:null,message:`action.type must be a string. Received '${e}'`,required:!0},payload:(e=null)=>({ok:!0,payload:e}),interval:(e=0)=>Number.isInteger(e)?{ok:!0,payload:e}:{ok:!1,payload:0,message:`'${e}' invalid action.interval value`,required:!1},timeOfCreation:(e=0)=>Number.isInteger(e)?{ok:!0,payload:e}:{ok:!1,payload:0,message:`'${e}' invalid @cyre.call time of creation value`,required:!0},repeat:(e=0)=>Number.isInteger(e)?{ok:!0,payload:e}:{ok:!1,payload:0,message:`'${e}' invalid action.repeat value`,required:!1},message:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:\"\",message:`action.message must be a string. Received '${e}'`,required:!1},group:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:null,message:`'${e}' invalid action.group value`,required:!1},callback:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:null,message:`'${e}' invalid action.callback value`,required:!1},log:(e=!1)=>\"boolean\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:!1,message:`'${e}' invalid action.log value`,required:!1},middleware:(e=\"\")=>\"string\"==typeof e?{ok:!0,payload:e}:{ok:!1,payload:null,message:`'${e}' invalid action.middleware value`,required:!1},throttle:(e=0)=>Number.isInteger(e)?{ok:!0,payload:e}:{ok:!1,payload:100,message:`'${e}'  action.throttle value must be a number`,required:!1},debounce:(e=0)=>Number.isInteger(e)?{ok:!0,payload:e}:{ok:!1,payload:100,message:`'${e}'  action.debounce value must be a number`,required:!1},at:(e=0)=>({ok:!1,payload:e,message:`'${e}'  action.at is an experimental feature, not applied yet`,required:!1})},$e=function(e=crypto.randomUUID()){let t=!1;const r=async(e,t,r)=>{const o=Te(t,(async()=>{j.isHealthy()&&await i({...e,timeOfCreation:performance.now(),payload:r??e.payload})}),e.repeat||!0,e.id);return\"error\"===o.kind?{ok:!1,payload:null,message:o.error.message}:{ok:!0,payload:null,message:`Scheduled with breathing-adjusted interval: ${Math.round(t)}ms`}},o=async(e,t)=>{const r=e.priority?.level||\"medium\";if(!j.shouldAllowCall(r)){const{stress:e}=j.get();return{ok:!1,payload:null,message:`System under high stress (${(100*e.combined).toFixed(1)}%). Try later.`}}return a(e,t)},i=async e=>{if(!e?.type)throw new Error(\"Invalid IO object\");try{const r=ie(e.type)||ie(e.id);if(!r){const t=`${D} ${e.type}`;return s.error(t),{ok:!1,payload:null,message:t}}const o=performance.now(),i=fe({...e},r.fn);if(e.log&&s.info({...i,executionTime:performance.now()-o,timestamp:Date.now()}),i?.intraLink)try{const{id:e,payload:t}=i.intraLink;await n(e,t)}catch(t){s.error(`Linked action error: ${t}`)}return{ok:!0,payload:i,message:g}}catch(t){const e=t instanceof Error?t.message:String(t);return s.error(`Dispatch error: ${e}`),{ok:!1,payload:null,message:`Dispatch error: ${e}`}}},a=async(e,t)=>{try{if(e.throttle){const t=Date.now(),r=t-(re(e.id)?.lastExecutionTime||0);if(r<e.throttle)return{ok:!1,payload:null,message:`Throttled: ${e.throttle-r}ms remaining`}}const r=await i({...e,timeOfCreation:performance.now(),payload:t??e.payload});return j.recordCall(e.priority?.level),r}catch(r){return{ok:!1,payload:null,message:`Call failed: ${r instanceof Error?r.message:String(r)}`}}},n=async(e,i)=>{if(t)return{ok:!1,message:x,payload:null};if(!e?.trim())return{ok:!1,message:O,payload:null};const n=J(e.trim());return n?(async(e,t)=>{if(!e)return{ok:!1,payload:null,message:\"Invalid action\"};const{breathing:i,stress:n}=j.get();if(i.isRecuperating&&\"critical\"!==e.priority?.level)return{ok:!1,payload:null,message:`System recuperating (${(100*i.recuperationDepth).toFixed(1)}% depth). Try later.`};if(e.interval){const o=e.interval*(1+n.combined);return r(e,o,t)}return n.combined>=U.HIGH?o(e,t):a(e,t)})(n,i):{ok:!1,payload:null,message:`${S}: ${e}`}},c=()=>{if(!t)try{le().forEach((e=>{e.timeoutId&&clearTimeout(e.timeoutId)})),Ae(),ae(),Z(),j.reset(),t=!0,\"undefined\"!=typeof process&&process.exit&&process.exit(0)}catch(e){s.error(`Failed to shutdown gracefully: ${e}`),\"undefined\"!=typeof process&&process.exit&&process.exit(1)}};return\"undefined\"!=typeof window?window.addEventListener(\"beforeunload\",c):(process.on(\"SIGINT\",c),process.on(\"SIGTERM\",c),process.on(\"uncaughtException\",(e=>{console.error(\"Uncaught Exception:\",e),c()}))),{initialize:()=>(t=!1,Te(q.BASE,(async()=>{const e=j.get();j.updateBreath({cpu:e.system.cpu,memory:e.system.memory,eventLoop:e.system.eventLoop,isOverloaded:e.system.isOverloaded})}),!0),Re(),console.log(\"%c\"+N,\"background: rgb(151, 2, 151); color: white; display: block;\"),{ok:!0,payload:200,message:g}),call:n,action:e=>{if(t)s.error(m);else try{if(Array.isArray(e))e.forEach((e=>{const t=he({...e,type:e.type||e.id},Me);t.ok&&t.payload&&Q(t.payload)}));else{const t=he({...e,type:e.type||e.id},Me);t.ok&&t.payload&&Q(t.payload)}}catch(r){s.error(`Action registration failed: ${r}`)}},on:ve,shutdown:c,status:()=>(t?s.info({ok:!0,message:m}):s.info({ok:!0,message:p}),t),forget:e=>t?(s.error(x),!1):(we(e),K(e)),get:e=>{if(!t)return J(e);s.error(x)},pause:e=>{if(t)return void s.error(x);we(e);const r=le();if(e){const t=se(e);t&&ne({...t,status:\"paused\"})}else r.forEach((e=>{e&&ne({...e,status:\"paused\"})}))},resume:e=>{if(t)return void s.error(x);Re(e);const r=le();if(e){const t=se(e);t&&ne({...t,status:\"active\"})}else r.forEach((e=>{e&&ne({...e,status:\"active\"})}))},hasChanged:(e,r)=>t?(s.error(x),!1):ee(e,r),getPreviousPayload:e=>{if(!t)return te(e);s.error(x)},getBreathingState:()=>j.get().breathing,getPerformanceState:()=>{const e=j.get();return{totalProcessingTime:0,totalCallTime:0,totalStress:e.stress.combined,stress:e.stress.combined}},getMetrics:e=>t?{hibernating:!0,activeFormations:0,inRecuperation:!1,breathing:j.get().breathing,formations:[]}:{hibernating:!1,activeFormations:de().length,inRecuperation:!1,breathing:j.get().breathing,formations:le().filter((t=>t.id===e)).map((e=>({...e,breathingSync:1})))}}},Ce=$e(\"quantum-inceptions\");Ce.initialize();e.Cyre=$e,e.CyreLog=s,e.cyre=Ce,e.debounce=(e,t)=>{let r,o;const i=(...i)=>{o=i,clearTimeout(r),r=setTimeout((()=>e(...o)),t)};return i.cancel=()=>{clearTimeout(r)},i},e.default=\"./app\",e.isEqual=l,e.memoize=c,e.pipe=u,e.throttle=(e,t)=>{let r,o=null,i=0;const a=(...a)=>{r=a;const n=Date.now();i&&n<i+t?null===o&&(o=setTimeout((()=>{i=Date.now(),o=null,e(...r)}),t)):(i=n,e(...a))};return a.cancel=()=>{o&&(clearTimeout(o),o=null)},a},e.tryCatch=async e=>{try{return{kind:\"ok\",value:await e()}}catch(t){return{kind:\"error\",error:t instanceof Error?t:new Error(String(t))}}},e.version=\"3.1.2\",Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:\"Module\"}})}));\n//# sourceMappingURL=cyre.js.map\n","//src/config/holo-config.ts\n\nimport {DeepLinkingOptions, TouchState} from '~/types/interface'\n\n/**\n * H.O.L.O - C.A.R.O.U.S.E.L\n * Centralized configuration and constants\n */\n\n// Touch event constants\nexport const TOUCH_EVENTS = {\n  TOUCH_START: 'touch_start',\n  TOUCH_MOVE: 'touch_move',\n  TOUCH_END: 'touch_end',\n  DRAG_HORIZONTAL: 'drag_horizontal',\n  DRAG_VERTICAL: 'drag_vertical',\n  TRACK_VELOCITY: 'track_velocity',\n  PROCESS_TOUCH_END: 'process_touch_end'\n}\n\n// Standard event naming constants\nexport const EVENTS = {\n  // Initialization events\n  INIT_CAROUSEL: 'init_carousel',\n  INIT_DIMENSIONS: 'init_dimensions',\n\n  // State events\n  STATE_UPDATE: 'state_update',\n  STATE_BATCH_UPDATE: 'state_batch_update',\n\n  // Dimension events\n  REFRESH_CAROUSEL: 'refresh_carousel',\n  REFRESH_SCREEN: 'refresh_screen',\n\n  // Positioning events\n  SNAP_TO_POSITION: 'snap_to_position',\n  SNAP: 'snap',\n  TRANSFORM_COMPLETE: 'transform_complete',\n\n  // Navigation events\n  ANIMATE_FORWARD: 'animate_forward',\n  ANIMATE_BACKWARD: 'animate_backward',\n  NEXT_SLIDE: 'next_slide',\n  PREV_SLIDE: 'prev_slide',\n  FIRST_SLIDE: 'first_slide',\n  LAST_SLIDE: 'last_slide',\n  GO_TO_SLIDE: 'go_to_slide',\n  ACTIVATE: 'activate',\n  BRING_TO_FOCUS: 'bring_to_focus',\n\n  // Input events\n  WHEEL_EVENT: 'wheel_event',\n  KEYBOARD_EVENT: 'keyboard_event',\n\n  // Miscellaneous events\n  SHAKE: 'shake',\n\n  // Error handling\n  ERROR_HANDLER: 'error_handler',\n\n  // Performance events\n  PERFORMANCE_MONITOR: 'performance_monitor',\n  PERFORMANCE_OPTIMIZE: 'performance_optimize'\n}\n\n// Default animation settings\nexport const ANIMATION = {\n  DURATION: 600,\n  TIMING: 'cubic-bezier(0.215, 0.61, 0.355, 1)'\n}\n\n// Performance thresholds\nexport const PERFORMANCE = {\n  STRESS_THRESHOLD_HIGH: 0.8,\n  STRESS_THRESHOLD_MEDIUM: 0.5,\n  STRESS_HISTORY_SIZE: 10\n}\n\n// Default options\nexport const DEFAULT_IO_OPTIONS = {\n  enabled: 1, // Enable/disable carousel\n  wheel: 0, // Mouse wheel navigation\n  controller: 0, // Built-in controllers\n  drag: 1, // Mouse drag\n  swipe: 1, // Touch swipe\n  snap: 3, // Snap behavior (0=none, 1=loose, 2=medium, 3=strict)\n  focus: 1, // Focus on active slide\n  animate: 0, // Auto-animation (0=off)\n  animateDirection: 1, // Animation direction (1=forward, -1=backward)\n  duration: 600, // Animation duration (ms)\n  loop: 0, // Loop when reaching end (0=no, 1=yes, n=number of times)\n  orientation: 0, // Carousel orientation (0=horizontal, 1=vertical)\n  active: true, // Whether carousel is active\n  onClick: true, // Enable click events\n  onDoubleClick: false // Enable double-click events\n}\n\n// CSS class names (for consistency)\nexport const CSS_CLASSES = {\n  CAROUSEL: 'holo-carousel',\n  CONTAINER: 'holo-container',\n  ITEM: 'holo',\n  ACTIVE: 'active',\n  TRANSITION: 'transition',\n  LOADING: 'loading',\n  CONTROLS: 'holo-controls',\n  DOT: 'holo-dot',\n  NAV: 'holo-nav',\n  PREV: 'holo-prev',\n  NEXT: 'holo-next'\n}\n\nexport const DEFAULT_ANIMATION = {\n  DURATION: 1000,\n  TIMING: 1000\n}\n\n// Create shared touch state\nexport const touchState: TouchState = {\n  id: null,\n  virtual: null,\n  startX: 0,\n  startY: 0,\n  currentX: 0,\n  currentY: 0,\n  lastX: 0,\n  lastY: 0,\n  distanceX: 0,\n  distanceY: 0,\n  directionX: 0,\n  directionY: 0,\n  velocityX: 0,\n  velocityY: 0,\n  startTransformX: 0,\n  startTransformY: 0,\n  pressed: false,\n  startTime: 0,\n  multiplier: 1.5,\n  orientation: false,\n  targetElement: null,\n  moved: false,\n  isNested: false\n}\n\n/**\n * Default deep linking options\n */\nexport const DEFAULT_DEEP_LINKING_OPTIONS: DeepLinkingOptions = {\n  enabled: true,\n  paramPrefix: 'slide',\n  updateHistory: true,\n  scrollToCarousel: true,\n  nestedSeparator: '.'\n}\n","//src/libs/holo-dom.ts\n\nimport {CyreLog} from 'cyre'\nimport type {HoloVirtual, HoloShadow, HoloDimensions} from '../types/interface'\nimport {_holo} from './holo-essentials'\nimport {EVENTS} from '../config/holo-config'\n\n/**\n * Check if DOM visibility APIs are available\n * Ensures we don't calculate dimensions when document is not visible\n */\nexport const isVisibilityAvailable = (): boolean => {\n  return (\n    document.visibilityState === undefined ||\n    document.visibilityState === 'visible'\n  )\n}\n\n/**\n * Get flex gap value from container element\n * Handles both inline styles and CSS variables\n */\nexport const getFlexGap = (container: HTMLElement): number => {\n  if (!container) return 0\n\n  try {\n    // Try to get computed style\n    const style = window.getComputedStyle(container)\n\n    // Check for gap property (most modern browsers)\n    if (style.gap && style.gap !== 'normal') {\n      // Parse gap value (remove 'px' or other units)\n      const gapValue = parseInt(style.gap, 10)\n      if (!isNaN(gapValue)) {\n        return gapValue\n      }\n    }\n\n    // Check for CSS variable (fallback)\n    const rootStyle = window.getComputedStyle(document.documentElement)\n    const gapVar = rootStyle.getPropertyValue('--holo-slide-gap')\n\n    if (gapVar) {\n      const gapValue = parseInt(gapVar, 10)\n      if (!isNaN(gapValue)) {\n        return gapValue\n      }\n    }\n\n    // Check for row-gap and column-gap separately\n    const rowGap =\n      style.rowGap && style.rowGap !== 'normal' ? parseInt(style.rowGap, 10) : 0\n    const columnGap =\n      style.columnGap && style.columnGap !== 'normal'\n        ? parseInt(style.columnGap, 10)\n        : 0\n\n    // For horizontal carousels, column-gap matters most\n    // For vertical carousels, row-gap matters most\n    return Math.max(rowGap || 0, columnGap || 0)\n  } catch (error) {\n    CyreLog.warn('Error detecting flex gap:', error)\n    return 0 // Default to no gap if detection fails\n  }\n}\n\n/**\n * Get element dimensions including margins with additional safeguards\n */\nexport const getElementDimensions = (element: HTMLElement): HoloDimensions => {\n  if (!element) return {width: 0, height: 0}\n\n  try {\n    // Try to get dimensions from inline styles first (most reliable)\n    let width = 0\n    let height = 0\n\n    // Get from inline style if available\n    if (element.style.width && element.style.height) {\n      width = parseInt(element.style.width, 10) || 0\n      height = parseInt(element.style.height, 10) || 0\n    }\n\n    // If inline styles didn't work, try getBoundingClientRect\n    if (width === 0 || height === 0) {\n      const rect = element.getBoundingClientRect()\n      width = rect.width || 0\n      height = rect.height || 0\n    }\n\n    // If still zero, try offsetWidth/offsetHeight\n    if (width === 0 || height === 0) {\n      width = element.offsetWidth || 0\n      height = element.offsetHeight || 0\n    }\n\n    // Get margins from computed style\n    const style = window.getComputedStyle(element)\n    const marginLeft = parseInt(style.marginLeft, 10) || 0\n    const marginRight = parseInt(style.marginRight, 10) || 0\n    const marginTop = parseInt(style.marginTop, 10) || 0\n    const marginBottom = parseInt(style.marginBottom, 10) || 0\n\n    // Add margins to dimensions\n    width += marginLeft + marginRight\n    height += marginTop + marginBottom\n\n    // Final safeguard against zero or NaN values\n    if (width <= 0 || isNaN(width)) width = 200\n    if (height <= 0 || isNaN(height)) height = 200\n\n    return {width, height}\n  } catch (error) {\n    CyreLog.error('Error calculating element dimensions:', error)\n    return {width: 200, height: 200} // Fallback dimensions\n  }\n}\n\n/**\n * Calculate carousel dimensions with improved robustness\n * This is the main dimension calculation function\n */\nexport const calculateCarouselDimensions = (\n  virtual: HoloVirtual,\n  shadow: HoloShadow\n): HoloVirtual | null => {\n  // Ensure we have DOM elements\n  if (!shadow?.container || !shadow?.carousel) {\n    CyreLog.error('Missing carousel DOM elements')\n    return null\n  }\n\n  try {\n    // Safety check for DOM readiness\n    if (\n      shadow.container.offsetWidth === 0 &&\n      shadow.container.offsetHeight === 0\n    ) {\n      CyreLog.warn(`DOM not ready for measurement, carousel: ${virtual.id}`)\n      return null\n    }\n\n    // Store original styles to restore later\n    const originalCarouselStyle = shadow.carousel.style.cssText\n    const originalContainerStyle = shadow.container.style.cssText\n\n    // Force visibility for measurement\n    shadow.carousel.style.visibility = 'visible'\n    shadow.carousel.style.display = 'block'\n    shadow.container.style.visibility = 'visible'\n    shadow.container.style.display = 'flex'\n\n    // Force layout recalculation\n    void shadow.carousel.offsetHeight\n    void shadow.container.offsetHeight\n\n    // Get all slides\n    const slides = Array.from(shadow.container.children) as HTMLElement[]\n\n    if (slides.length === 0) {\n      CyreLog.warn(`No slides found in carousel ${virtual.id}`)\n\n      // Restore original styles\n      shadow.carousel.style.cssText = originalCarouselStyle\n      shadow.container.style.cssText = originalContainerStyle\n\n      return null\n    }\n\n    // Get parent container dimensions with fallbacks\n    const parentWidth = Math.max(\n      shadow.carousel.parentElement?.clientWidth || 0,\n      shadow.carousel.clientWidth || 0,\n      window.innerWidth || 1024\n    )\n\n    const parentHeight = Math.max(\n      shadow.carousel.parentElement?.clientHeight || 0,\n      shadow.carousel.clientHeight || 0,\n      window.innerHeight || 768\n    )\n\n    // CRITICAL: Detect flex gap now and include it in calculations\n    const flexGap = getFlexGap(shadow.container)\n\n    // IMPROVED: More accurate calculation of total width and max slide dimensions\n    let totalWidth = 0\n    let totalHeight = 0\n    let maxSlideWidth = 0\n    let maxSlideHeight = 0\n\n    // Measure each slide individually to account for varying widths\n    slides.forEach((slide, index) => {\n      // Make sure the slide is visible for measurement\n      const originalSlideStyle = slide.style.cssText\n      slide.style.visibility = 'visible'\n      slide.style.display = 'inline-block'\n\n      // Force recalculation\n      void slide.offsetHeight\n\n      // Get computed style to include margins\n      const style = window.getComputedStyle(slide)\n      const marginLeft = parseInt(style.marginLeft) || 0\n      const marginRight = parseInt(style.marginRight) || 0\n      const marginTop = parseInt(style.marginTop) || 0\n      const marginBottom = parseInt(style.marginBottom) || 0\n\n      // Calculate slide dimensions with margins\n      const slideWidth = slide.offsetWidth + marginLeft + marginRight\n      const slideHeight = slide.offsetHeight + marginTop + marginBottom\n\n      // Track maximum dimensions\n      maxSlideWidth = Math.max(maxSlideWidth, slideWidth)\n      maxSlideHeight = Math.max(maxSlideHeight, slideHeight)\n\n      // Add to total dimensions - CRITICAL for scrolling all slides\n      totalWidth += slideWidth\n\n      // If not the last item, add gap for horizontal layout\n      if (index < slides.length - 1) {\n        totalWidth += flexGap\n      }\n\n      totalHeight += slideHeight\n\n      // If not the last item, add gap for vertical layout\n      if (index < slides.length - 1) {\n        totalHeight += flexGap\n      }\n\n      // Restore original style\n      slide.style.cssText = originalSlideStyle\n    })\n\n    // Add safety margin to ensure last slide is fully visible\n    totalWidth += maxSlideWidth * 0.1 // Add 10% of a slide width as padding\n\n    // Fallback if dimensions are still zero\n    if (maxSlideWidth === 0) maxSlideWidth = 200\n    if (maxSlideHeight === 0) maxSlideHeight = 200\n    if (totalWidth === 0)\n      totalWidth = (maxSlideWidth + flexGap) * slides.length - flexGap\n    if (totalHeight === 0)\n      totalHeight = (maxSlideHeight + flexGap) * slides.length - flexGap\n\n    // Calculate how many items can fit in view\n    const numberOfSlots = Math.min(\n      Math.max(1, Math.floor(parentWidth / (maxSlideWidth + flexGap))),\n      virtual.item.max || 10\n    )\n\n    // Calculate carousel dimensions (the viewport)\n    const carouselWidth = virtual.io.orientation\n      ? parentWidth\n      : Math.min(\n          numberOfSlots * (maxSlideWidth + flexGap) - flexGap,\n          parentWidth\n        )\n\n    const carouselHeight = virtual.io.orientation\n      ? Math.min(\n          numberOfSlots * (maxSlideHeight + flexGap) - flexGap,\n          parentHeight\n        )\n      : maxSlideHeight\n\n    // CRITICAL FIX: Calculate container dimensions to include ALL slides\n    // This ensures all slides are accessible by scrolling\n    const containerWidth = virtual.io.orientation\n      ? parentWidth // For vertical orientation, container width is just parent width\n      : totalWidth // For horizontal, it's the ACCURATE sum of all slide widths\n\n    const containerHeight = virtual.io.orientation\n      ? totalHeight // For vertical orientation, container height is the sum of all slide heights\n      : maxSlideHeight // For horizontal, it's just the maximum slide height\n\n    // CRITICAL FIX: Calculate end position to ensure all slides are accessible\n    const endOfSlidePosition = virtual.io.orientation\n      ? -Math.max(0, containerHeight - carouselHeight)\n      : -Math.max(0, containerWidth - carouselWidth)\n\n    // Store the detected flex gap in the virtual state for later use\n    const slideWithGap = {\n      width: maxSlideWidth + flexGap,\n      height: maxSlideHeight + flexGap,\n      actualWidth: maxSlideWidth,\n      actualHeight: maxSlideHeight,\n      gap: flexGap\n    }\n\n    // Restore original styles\n    shadow.carousel.style.cssText = originalCarouselStyle\n    shadow.container.style.cssText = originalContainerStyle\n\n    // Log the calculated dimensions for debugging\n    CyreLog.info(`Carousel ${virtual.id} dimensions calculated:`, {\n      slides: slides.length,\n      slideWidth: maxSlideWidth,\n      slideHeight: maxSlideHeight,\n      flexGap,\n      slideWithGapWidth: slideWithGap.width,\n      slideWithGapHeight: slideWithGap.height,\n      carouselWidth,\n      carouselHeight,\n      containerWidth,\n      containerHeight,\n      endOfSlidePosition,\n      totalWidth\n    })\n\n    // Create updated virtual state with new dimensions\n    return {\n      ...virtual,\n      item: {\n        ...virtual.item,\n        ...slideWithGap\n      },\n      numberOfSlots,\n      carousel: {\n        width: carouselWidth,\n        height: carouselHeight\n      },\n      container: {\n        width: containerWidth,\n        height: containerHeight\n      },\n      endOfSlidePosition,\n      noOfChildren: slides.length\n    }\n  } catch (error) {\n    CyreLog.error(`Error in dimension calculation for ${virtual.id}:`, error)\n    return null\n  }\n}\n\n/**\n * Force calculation of carousel dimensions and retry if needed\n */\nexport const forceCalculateCarouselDimensions = (\n  id: string\n): Promise<boolean> => {\n  return new Promise(resolve => {\n    if (!_holo[id]) {\n      CyreLog.error(`Carousel ${id} not found`)\n      resolve(false)\n      return\n    }\n\n    const state = _holo[id].getState\n    const {virtual, shadow} = state\n\n    // Log what we're about to do\n    CyreLog.info(`Force calculating dimensions for carousel ${id}`)\n\n    // Try to calculate dimensions immediately\n    const updatedVirtual = calculateCarouselDimensions(virtual, shadow)\n\n    if (updatedVirtual) {\n      // Store the updated dimensions\n      _holo[id].setDimension = {...updatedVirtual}\n\n      // Check if we have valid dimensions\n      if (\n        (virtual.io.orientation === 0 && updatedVirtual.item.width > 0) ||\n        (virtual.io.orientation === 1 && updatedVirtual.item.height > 0)\n      ) {\n        CyreLog.info(`Successfully calculated dimensions for ${id}:`, {\n          width: updatedVirtual.item.width,\n          height: updatedVirtual.item.height,\n          gap: updatedVirtual.item.gap\n        })\n        resolve(true)\n        return\n      }\n    }\n\n    // If we got here, we need to retry with a delay\n    CyreLog.warn(\n      `Initial dimension calculation failed for ${id}, retrying with delay`\n    )\n\n    // Try again with a delay to ensure DOM is ready\n    setTimeout(() => {\n      try {\n        // Force display to be set before calculating\n        if (shadow.carousel) {\n          shadow.carousel.style.display = 'block'\n        }\n        if (shadow.container) {\n          shadow.container.style.display = 'flex'\n        }\n\n        // Force a reflow\n        if (shadow.carousel) {\n          void shadow.carousel.offsetHeight\n        }\n        if (shadow.container) {\n          void shadow.container.offsetHeight\n        }\n\n        // Try again\n        const retryVirtual = calculateCarouselDimensions(virtual, shadow)\n\n        if (retryVirtual) {\n          // Store the updated dimensions\n          _holo[id].setDimension = {...retryVirtual}\n\n          CyreLog.info(`Retry succeeded for ${id}:`, {\n            width: retryVirtual.item.width,\n            height: retryVirtual.item.height,\n            gap: retryVirtual.item.gap\n          })\n\n          resolve(true)\n        } else {\n          CyreLog.error(`Dimension calculation failed for ${id} after retry`)\n          resolve(false)\n        }\n      } catch (error) {\n        CyreLog.error(`Error during retry for ${id}:`, error)\n        resolve(false)\n      }\n    }, 300) // Delay long enough for DOM to be ready\n  })\n}\n\n/**\n * Force refresh of all carousels to correct initialization issues\n */\nexport const forceRefreshAllCarousels = async (): Promise<void> => {\n  const carouselIds = Object.keys(_holo)\n  CyreLog.info(`Force refreshing ${carouselIds.length} carousels`)\n\n  // Process each carousel one at a time to avoid race conditions\n  for (const id of carouselIds) {\n    await forceCalculateCarouselDimensions(id)\n  }\n}\n\n/**\n * Get the current visible slide index\n */\nexport const getCurrentSlideIndex = (virtual: HoloVirtual): number => {\n  if (!virtual?.id) {\n    return 0\n  }\n\n  // Calculate based on transform position and item width/height\n  // Use width/height that includes gap for proper calculations\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 1\n    : virtual.item.width || 1\n\n  const position = virtual.io.orientation\n    ? Math.abs(virtual.transformY)\n    : Math.abs(virtual.transformX)\n\n  return Math.round(position / slideDimension)\n}\n\n/**\n * Get offsets for all slides in a carousel\n * With gap consideration for accurate positioning\n */\nexport const getSlideOffsets = (\n  virtual: HoloVirtual,\n  selectedElement?: HTMLElement\n): {offsets: number[]; selectedIndex: number} => {\n  if (!virtual?.id) {\n    return {offsets: [], selectedIndex: -1}\n  }\n\n  const container = document.querySelector(`#${virtual.id} .holo-container`)\n  if (!container) {\n    return {offsets: [], selectedIndex: -1}\n  }\n\n  const slides = Array.from(container.children) as HTMLElement[]\n  const gap = virtual.item.gap || 0\n\n  // Calculate offsets with gap consideration\n  const offsets = slides.map((slide, index) => {\n    if (virtual.io.orientation) {\n      // For vertical orientation\n      const baseOffset = index * (virtual.item.actualHeight + gap)\n      return baseOffset || 0\n    } else {\n      // For horizontal orientation\n      const baseOffset = index * (virtual.item.actualWidth + gap)\n      return baseOffset || 0\n    }\n  })\n\n  // Find the index of the selected element\n  let selectedIndex = -1\n  if (selectedElement) {\n    selectedIndex = slides.findIndex(slide => slide === selectedElement)\n  }\n\n  return {offsets, selectedIndex}\n}\n\n/**\n * Set active class on the current slide\n */\nexport const updateActiveSlide = (virtual: HoloVirtual): void => {\n  if (!virtual?.id) return\n\n  const currentIndex = getCurrentSlideIndex(virtual)\n  const container = document.querySelector(`#${virtual.id} .holo-container`)\n\n  if (!container) return\n\n  // Remove active class from all slides\n  const slides = Array.from(container.children)\n  slides.forEach((slide, index) => {\n    slide.classList.toggle('active', index === currentIndex)\n  })\n}\n","//src/components/orientation-handler.ts\n\nimport type {HoloVirtual} from '../types/interface'\nimport {snapToGrid} from '../libs/holo-essentials'\nimport {CyreLog} from 'cyre'\n\n/**\n * Handles horizontal transformations\n * Apply constraints and snap to grid functionality\n * Improved to handle all slides properly with flex gap\n */\nexport const transformX = (virtual: HoloVirtual): HoloVirtual => {\n  // Check for valid dimensions to avoid NaN errors\n  if (!virtual.item.width || isNaN(virtual.item.width)) {\n    CyreLog.warn(\n      `Missing width for horizontal carousel ${virtual.id}. Using fallback.`\n    )\n    virtual.item.width = 200\n  }\n\n  // Create a new object to maintain immutability\n  const updatedVirtual = {\n    ...virtual,\n    transformY: 0,\n    transformX:\n      virtual.io.snap && virtual.item.width\n        ? snapToGrid(virtual.transformX, virtual.item.width || 0)\n        : virtual.transformX\n  }\n\n  // CRITICAL: Make sure we have valid container and carousel dimensions\n  const containerWidth = virtual.container.width || 0\n  const carouselWidth = virtual.carousel.width || 0\n\n  // Calculate the true end position based on the FULL container width\n  const calculatedEndPosition = -Math.max(0, containerWidth - carouselWidth)\n\n  // IMPORTANT FIX: Always update the end position if it's different\n  // This prevents position drift as we scroll\n  updatedVirtual.endOfSlidePosition = calculatedEndPosition\n\n  // Apply boundary constraints\n  if (updatedVirtual.transformX >= 0) {\n    updatedVirtual.transformX = 0\n    updatedVirtual.endOfSlide = 1 // Left end of the carousel\n  } else if (updatedVirtual.transformX <= updatedVirtual.endOfSlidePosition) {\n    updatedVirtual.transformX = updatedVirtual.endOfSlidePosition\n    updatedVirtual.endOfSlide = -1 // Right end of the carousel\n  } else {\n    updatedVirtual.endOfSlide = 0 // In the middle of carousel\n  }\n\n  return updatedVirtual\n}\n\n/**\n * Handles vertical transformations\n * Apply constraints and snap to grid functionality\n * Improved to handle all slides properly with flex gap\n */\nexport const transformY = (virtual: HoloVirtual): HoloVirtual => {\n  // Check for valid dimensions first to avoid NaN errors\n  if (!virtual.item.height || isNaN(virtual.item.height)) {\n    CyreLog.warn(\n      `Missing height for vertical carousel ${virtual.id}. Using fallback.`\n    )\n    // Set a fallback height to prevent further issues\n    virtual.item.height = 200\n  }\n\n  // Create a new object to maintain immutability\n  const updatedVirtual = {\n    ...virtual,\n    transformX: 0, // Reset X transform for vertical carousels\n    transformY:\n      virtual.io.snap && virtual.item.height\n        ? snapToGrid(virtual.transformY, virtual.item.height || 0)\n        : virtual.transformY\n  }\n\n  // CRITICAL: Make sure we have valid container and carousel dimensions\n  const containerHeight = virtual.container.height || 0\n  const carouselHeight = virtual.carousel.height || 0\n\n  // Calculate the true end position based on the FULL container height\n  const calculatedEndPosition = -Math.max(0, containerHeight - carouselHeight)\n\n  // IMPORTANT FIX: Always update the end position if it's different\n  updatedVirtual.endOfSlidePosition = calculatedEndPosition\n\n  // Apply boundary constraints\n  if (updatedVirtual.transformY >= 0) {\n    updatedVirtual.transformY = 0\n    updatedVirtual.endOfSlide = 1 // Top end of the carousel\n  } else if (updatedVirtual.transformY <= updatedVirtual.endOfSlidePosition) {\n    updatedVirtual.transformY = updatedVirtual.endOfSlidePosition\n    updatedVirtual.endOfSlide = -1 // Bottom end of the carousel\n  } else {\n    updatedVirtual.endOfSlide = 0 // In the middle of carousel\n  }\n\n  return updatedVirtual\n}\n\n/**\n * Handles horizontal transformations (lightweight version)\n * Only applies boundary constraints without snapping\n */\nexport const transformXLite = (virtual: HoloVirtual): HoloVirtual => {\n  // Create a new object to maintain immutability\n  const updatedVirtual = {\n    ...virtual,\n    transformY: 0\n  }\n\n  // CRITICAL: Make sure we have valid container and carousel dimensions\n  const containerWidth = virtual.container.width || 0\n  const carouselWidth = virtual.carousel.width || 0\n\n  // Calculate the true end position based on the FULL container width\n  const calculatedEndPosition = -Math.max(0, containerWidth - carouselWidth)\n\n  // IMPORTANT FIX: Always update the end position if it's different\n  updatedVirtual.endOfSlidePosition = calculatedEndPosition\n\n  // Apply boundary constraints only\n  if (updatedVirtual.transformX >= 0) {\n    updatedVirtual.transformX = 0\n    updatedVirtual.endOfSlide = 1\n  } else if (updatedVirtual.transformX <= updatedVirtual.endOfSlidePosition) {\n    updatedVirtual.transformX = updatedVirtual.endOfSlidePosition\n    updatedVirtual.endOfSlide = -1\n  } else {\n    updatedVirtual.endOfSlide = 0\n  }\n\n  return updatedVirtual\n}\n\n/**\n * Handles vertical transformations (lightweight version)\n * Only applies boundary constraints without snapping\n */\nexport const transformYLite = (virtual: HoloVirtual): HoloVirtual => {\n  // Check for valid dimensions first\n  if (!virtual.item.height || isNaN(virtual.item.height)) {\n    CyreLog.warn(\n      `Missing height for vertical carousel ${virtual.id}. Using fallback.`\n    )\n    // Set a fallback height to prevent further issues\n    virtual.item.height = 200\n  }\n\n  // Create a new object to maintain immutability\n  const updatedVirtual = {\n    ...virtual,\n    transformX: 0\n  }\n\n  // CRITICAL: Make sure we have valid container and carousel dimensions\n  const containerHeight = virtual.container.height || 0\n  const carouselHeight = virtual.carousel.height || 0\n\n  // Calculate the true end position based on the FULL container height\n  const calculatedEndPosition = -Math.max(0, containerHeight - carouselHeight)\n\n  // IMPORTANT FIX: Always update the end position if it's different\n  updatedVirtual.endOfSlidePosition = calculatedEndPosition\n\n  // Apply boundary constraints only\n  if (updatedVirtual.transformY >= 0) {\n    updatedVirtual.transformY = 0\n    updatedVirtual.endOfSlide = 1\n  } else if (updatedVirtual.transformY <= updatedVirtual.endOfSlidePosition) {\n    updatedVirtual.transformY = updatedVirtual.endOfSlidePosition\n    updatedVirtual.endOfSlide = -1\n  } else {\n    updatedVirtual.endOfSlide = 0\n  }\n\n  return updatedVirtual\n}\n\n/**\n * Apply transformation based on orientation\n * @param virtual Virtual state\n * @param light Whether to use lightweight transform (no snapping)\n * @returns Updated virtual state with constraints applied\n */\nexport const applyTransform = (\n  virtual: HoloVirtual,\n  light: boolean = false\n): HoloVirtual => {\n  if (virtual.io.orientation) {\n    return light ? transformYLite(virtual) : transformY(virtual)\n  } else {\n    return light ? transformXLite(virtual) : transformX(virtual)\n  }\n}\n\n/**\n * Smart transform function that chooses the right transform based on context\n * @param virtual Virtual state\n * @param options Options for transformation\n * @returns Updated virtual state with transformation applied\n */\nexport const smartTransform = (\n  virtual: HoloVirtual,\n  options: {\n    snap?: boolean\n    light?: boolean\n    target?: number\n  } = {}\n): HoloVirtual => {\n  // Determine if we're going to a specific target position\n  if (options.target !== undefined) {\n    const isVertical = !!virtual.io.orientation\n    const itemSize = isVertical\n      ? virtual.item.height || 0\n      : virtual.item.width || 0\n\n    if (itemSize > 0) {\n      const targetPosition = -Math.abs(options.target * itemSize)\n\n      // Create a new state with the target position\n      const targetVirtual = {\n        ...virtual,\n        transformX: isVertical ? 0 : targetPosition,\n        transformY: isVertical ? targetPosition : 0\n      }\n\n      // Apply the appropriate transform to enforce boundaries\n      return applyTransform(targetVirtual, !options.snap)\n    }\n  }\n\n  // Otherwise just apply the normal transform\n  return applyTransform(virtual, options.light)\n}\n","//src/libs/holo-navigation.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloVirtual} from '../types/interface'\nimport {_holo} from './holo-essentials'\nimport {EVENTS} from '../config/holo-config'\nimport {getSlideOffsets} from './holo-dom'\n\n/**\n * Centralized navigation functions for Holo carousel\n */\n\n/**\n * Go to next slide\n * @param virtual Virtual state\n */\nexport const goToNextSlide = (virtual: HoloVirtual): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot navigate: Invalid virtual state')\n    return\n  }\n\n  // Check if at the end\n  if (virtual.endOfSlide === -1 && !virtual.io.loop) {\n    // Already at the end and no loop configured\n    return\n  }\n\n  // Loop back to start if needed\n  if (virtual.endOfSlide === -1 && virtual.io.loop) {\n    cyre.call(EVENTS.FIRST_SLIDE, virtual)\n    return\n  }\n\n  // Calculate slide width/height based on orientation, including gap\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 0\n    : virtual.item.width || 0\n\n  if (!slideDimension) {\n    CyreLog.error(\n      `Cannot navigate: Missing dimension for carousel ${virtual.id}`\n    )\n    return\n  }\n\n  // IMPROVED: Calculate the current position and determine next slide position\n  const currentPosition = virtual.io.orientation\n    ? virtual.transformY\n    : virtual.transformX\n\n  const currentIndex = Math.round(Math.abs(currentPosition) / slideDimension)\n\n  // CRITICAL: Check if we're at the last slide\n  const maxIndex = (virtual.noOfChildren || 0) - 1\n\n  // Prevent going beyond the last slide\n  let nextIndex = currentIndex + 1\n  if (nextIndex > maxIndex && !virtual.io.loop) {\n    nextIndex = maxIndex\n  }\n\n  // Calculate the new transform position precisely\n  const newTransform = -Math.abs(nextIndex * slideDimension)\n\n  // Ensure we don't go beyond limits\n  const minPosition = virtual.endOfSlidePosition || 0\n  const newPosition = Math.max(newTransform, minPosition)\n\n  // Create updated virtual state with new position\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.io.orientation ? virtual.transformX : newPosition,\n    transformY: virtual.io.orientation ? newPosition : virtual.transformY\n  }\n\n  // Log navigation for debugging\n  CyreLog.info(\n    `Navigating to next slide: ${currentIndex} -> ${nextIndex}, position: ${currentPosition} -> ${newPosition}`\n  )\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Go to previous slide\n * @param virtual Virtual state\n */\nexport const goToPrevSlide = (virtual: HoloVirtual): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot navigate: Invalid virtual state')\n    return\n  }\n\n  // Check if at the beginning\n  if (virtual.endOfSlide === 1 && !virtual.io.loop) {\n    return\n  }\n\n  // Loop to end if needed\n  if (virtual.endOfSlide === 1 && virtual.io.loop) {\n    cyre.call(EVENTS.LAST_SLIDE, virtual)\n    return\n  }\n\n  // Calculate slide width/height based on orientation, including gap\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 0\n    : virtual.item.width || 0\n\n  if (!slideDimension) {\n    CyreLog.error(\n      `Cannot navigate: Missing dimension for carousel ${virtual.id}`\n    )\n    return\n  }\n\n  // IMPROVED: Calculate current and previous slide position\n  const currentPosition = virtual.io.orientation\n    ? virtual.transformY\n    : virtual.transformX\n\n  const currentIndex = Math.round(Math.abs(currentPosition) / slideDimension)\n\n  // Prevent going below the first slide\n  let prevIndex = currentIndex - 1\n  if (prevIndex < 0 && !virtual.io.loop) {\n    prevIndex = 0\n  }\n\n  // Calculate the new transform position\n  const newTransform = -Math.abs(prevIndex * slideDimension)\n\n  // Create updated virtual state with new position\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.io.orientation ? virtual.transformX : newTransform,\n    transformY: virtual.io.orientation ? newTransform : virtual.transformY\n  }\n\n  // Log navigation for debugging\n  CyreLog.info(`Navigating to previous slide: ${currentIndex} -> ${prevIndex}`)\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Go to first slide\n * @param virtual Virtual state\n */\nexport const goToFirstSlide = (virtual: HoloVirtual): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot navigate: Invalid virtual state')\n    return\n  }\n\n  // Create updated virtual state with start position\n  const updatedVirtual = {\n    ...virtual,\n    transformX: 0,\n    transformY: 0,\n    endOfSlide: 1 // At the start\n  }\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Go to last slide\n * @param virtual Virtual state\n */\nexport const goToLastSlide = (virtual: HoloVirtual): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot navigate: Invalid virtual state')\n    return\n  }\n\n  // IMPROVED: Calculate the position of the last slide directly\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 0\n    : virtual.item.width || 0\n\n  const maxIndex = (virtual.noOfChildren || 0) - 1\n  const lastSlidePosition = -Math.abs(maxIndex * slideDimension)\n\n  // Get absolute end position (from container dimensions)\n  const absoluteEndPosition = virtual.endOfSlidePosition || 0\n\n  // Use the greater (less negative) of the two to ensure we don't scroll too far\n  const finalPosition = Math.max(lastSlidePosition, absoluteEndPosition)\n\n  // Create updated virtual state with end position\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.io.orientation ? 0 : finalPosition,\n    transformY: virtual.io.orientation ? finalPosition : 0,\n    endOfSlide: -1 // At the end\n  }\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Go to specific slide index\n * @param virtual Virtual state\n * @param index Slide index to navigate to\n */\nexport const goToSlide = (virtual: HoloVirtual, index: number): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot navigate: Invalid virtual state')\n    return\n  }\n\n  // Calculate slide width/height based on orientation, including gap\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 0\n    : virtual.item.width || 0\n\n  if (!slideDimension) {\n    CyreLog.error(\n      `Cannot navigate: Missing dimension for carousel ${virtual.id}`\n    )\n    return\n  }\n\n  // IMPROVED: Check against max index\n  const maxIndex = (virtual.noOfChildren || 0) - 1\n  const safeIndex = Math.min(Math.max(0, index), maxIndex)\n\n  // Calculate the new transform position precisely\n  const newTransform = -Math.abs(safeIndex * slideDimension)\n\n  // Create updated virtual state with calculated position\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.io.orientation ? 0 : newTransform,\n    transformY: virtual.io.orientation ? newTransform : 0\n  }\n\n  // Log navigation for debugging\n  CyreLog.info(`Navigating to specific slide: ${safeIndex}`)\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Activate a specific slide (focus on click)\n * @param element The slide element\n * @param virtual Virtual state\n */\nexport const activateSlide = (\n  element: HTMLElement,\n  virtual: HoloVirtual\n): void => {\n  if (!element || !virtual?.id) {\n    CyreLog.error('Cannot activate slide: Invalid parameters')\n    return\n  }\n\n  // Get offset positions of all slides\n  const {offsets, selectedIndex} = getSlideOffsets(virtual, element)\n\n  if (selectedIndex === -1) {\n    CyreLog.error('Could not determine slide index')\n    return\n  }\n\n  // Update active class\n  document.querySelectorAll(`#${virtual.id} .holo`).forEach(el => {\n    el.classList.remove('active')\n  })\n  element.classList.add('active')\n\n  // Create updated virtual state with new position based on offset\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.io.orientation\n      ? virtual.transformX\n      : -Math.abs(offsets[selectedIndex]),\n    transformY: virtual.io.orientation\n      ? -Math.abs(offsets[selectedIndex])\n      : virtual.transformY\n  }\n\n  // Go to position\n  cyre.call(EVENTS.SNAP_TO_POSITION, updatedVirtual)\n}\n\n/**\n * Animate carousel in specified direction\n * @param virtual Virtual state\n * @param directionForward Direction of animation (true = forward, false = backward)\n */\nexport const animateCarousel = (\n  virtual: HoloVirtual,\n  directionForward: boolean = true\n): void => {\n  if (!virtual?.id) {\n    CyreLog.error('Cannot animate: Invalid virtual state')\n    return\n  }\n\n  if (directionForward) {\n    // Moving forward\n    if (virtual.endOfSlide === -1 && virtual.io.loop) {\n      // Loop back to start when at the end\n      goToFirstSlide(virtual)\n    } else {\n      // Go to next slide\n      goToNextSlide(virtual)\n    }\n  } else {\n    // Moving backward\n    if (virtual.endOfSlide === 1 && virtual.io.loop) {\n      // Loop to end when at the start\n      goToLastSlide(virtual)\n    } else {\n      // Go to previous slide\n      goToPrevSlide(virtual)\n    }\n  }\n}\n\n/**\n * Handle mouse wheel events for carousel navigation\n * @param e Wheel event\n * @param id Carousel ID\n */\nexport const handleWheel = (e: WheelEvent, id: string): void => {\n  e.preventDefault()\n  const virtual = _holo[id]?.getVirtual\n\n  if (!virtual) {\n    CyreLog.error(`Cannot handle wheel: Carousel ${id} not found`)\n    return\n  }\n\n  if (e.deltaY < 0) {\n    goToPrevSlide(virtual)\n  } else if (e.deltaY > 0) {\n    goToNextSlide(virtual)\n  }\n}\n","//src/core/holo-events.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloVirtual, HoloShadow} from '../types/interface'\nimport {EVENTS, ANIMATION} from '../config/holo-config'\nimport {_holo} from '../libs/holo-essentials'\nimport {\n  calculateCarouselDimensions,\n  isVisibilityAvailable,\n  getCurrentSlideIndex\n} from '../libs/holo-dom'\nimport {applyTransform} from '../components/orientation-handler'\nimport {\n  goToFirstSlide,\n  goToLastSlide,\n  goToNextSlide,\n  goToPrevSlide,\n  goToSlide,\n  activateSlide,\n  animateCarousel\n} from '../libs/holo-navigation'\n\n/**\n * Creates instance-specific event IDs for this carousel\n * @param id Carousel ID\n * @returns Object with event IDs for this instance\n */\nexport const createEventIds = (id: string) => ({\n  animate: `animate_${id}`,\n  snap: `snap_${id}`,\n  prevSlide: `prev_slide_${id}`,\n  nextSlide: `next_slide_${id}`,\n  lastSlide: `last_slide_${id}`,\n  firstSlide: `first_slide_${id}`,\n  goToSlide: `go_to_slide_${id}`,\n  activate: `activate_${id}`,\n  refresh: `refresh_${id}`,\n  transform: `transform_${id}`,\n  stateUpdate: `state_update_${id}`,\n  dimensionUpdate: `dimension_update_${id}`,\n  error: `error_${id}`\n})\n\n/**\n * Safely calls a cyre event with fallback\n * @param eventId Primary event ID to call\n * @param payload Event payload\n * @param fallbackEventId Optional fallback event if primary fails\n * @returns Success indicator\n */\nexport const safeEventCall = (\n  eventId: string,\n  payload: any,\n  fallbackEventId?: string\n): boolean => {\n  try {\n    cyre.call(eventId, payload)\n    return true\n  } catch (error) {\n    CyreLog.warn(`Failed to call event ${eventId}`, error)\n\n    // Try fallback if provided\n    if (fallbackEventId) {\n      try {\n        CyreLog.info(`Attempting fallback to ${fallbackEventId}`)\n        cyre.call(fallbackEventId, payload)\n        return true\n      } catch (fallbackError) {\n        CyreLog.error(\n          `Fallback to ${fallbackEventId} also failed`,\n          fallbackError\n        )\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Initialize the event system with centralized event handlers\n * All events are organized into logical groups with reusable listener patterns\n */\nexport const initializeEventSystem = (): void => {\n  CyreLog.info('Initializing Holo event system')\n\n  // Register event handlers\n  registerStateEvents()\n  registerDimensionEvents()\n  registerNavigationEvents()\n  registerTransformEvents()\n  registerErrorEvents()\n  registerPerformanceEvents()\n\n  // Register global actions\n  registerGlobalActions()\n}\n\n/**\n * Register state update events\n * These handle state synchronization between virtual and DOM\n */\nfunction registerStateEvents() {\n  // State batch update for multiple changes\n  cyre.on(EVENTS.STATE_BATCH_UPDATE, payload => {\n    if (!payload || !payload.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'state_batch_update',\n          error: 'Invalid batch update payload',\n          data: payload\n        }\n      }\n    }\n\n    const {id, changes} = payload\n    const virtual = _holo[id]?.getVirtual\n\n    if (!virtual) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'state_batch_update',\n          error: `Carousel ${id} not found for batch update`,\n          id\n        }\n      }\n    }\n\n    // Apply all changes at once\n    _holo[id].setState = {...virtual, ...changes}\n\n    // Return positioned state to trigger snap or rendering\n    return {\n      id: EVENTS.SNAP_TO_POSITION,\n      payload: _holo[id].getVirtual\n    }\n  })\n\n  // Single state update for a specific property\n  cyre.on(EVENTS.STATE_UPDATE, payload => {\n    if (!payload || !payload.id || !payload.property) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'state_update',\n          error: 'Invalid state update payload',\n          data: payload\n        }\n      }\n    }\n\n    const {id, property, value} = payload\n    const virtual = _holo[id]?.getVirtual\n\n    if (!virtual) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'state_update',\n          error: `Carousel ${id} not found for state update`,\n          id\n        }\n      }\n    }\n\n    // Update the specific property\n    _holo[id].setState = {\n      ...virtual,\n      [property]: value\n    }\n\n    // Only return to snap if position-related property\n    if (['transformX', 'transformY'].includes(property)) {\n      return {\n        id: EVENTS.SNAP_TO_POSITION,\n        payload: _holo[id].getVirtual\n      }\n    }\n  })\n}\n\n/**\n * Register dimension calculation events\n * These handle calculating and updating carousel dimensions\n */\nfunction registerDimensionEvents() {\n  // Initial dimension calculation after DOM is ready\n  cyre.on(EVENTS.INIT_DIMENSIONS, payload => {\n    if (!payload || !payload.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'init_dimensions',\n          error: 'Invalid init dimensions payload',\n          data: payload\n        }\n      }\n    }\n\n    const {id} = payload\n\n    if (!_holo[id]) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'init_dimensions',\n          error: `Carousel ${id} not found for dimension init`,\n          id\n        }\n      }\n    }\n\n    const virtual = _holo[id].getVirtual\n    const shadow = _holo[id].getShadow\n\n    // Ensure we have DOM access\n    if (!isVisibilityAvailable()) {\n      // Queue for later when DOM is available\n      CyreLog.info(\n        `Deferring dimensions calculation for ${id} until DOM is visible`\n      )\n      setTimeout(() => cyre.call(EVENTS.INIT_DIMENSIONS, {id}), 100)\n      return\n    }\n\n    try {\n      // Calculate dimensions\n      const updatedVirtual = calculateCarouselDimensions(virtual, shadow)\n\n      if (updatedVirtual) {\n        // Store updated dimensions\n        _holo[id].setDimension = {...updatedVirtual}\n\n        // Continue to position carousel\n        return {\n          id: EVENTS.SNAP_TO_POSITION,\n          payload: updatedVirtual\n        }\n      }\n\n      // If we're still here, retry with a delay\n      setTimeout(() => {\n        cyre.call(EVENTS.INIT_DIMENSIONS, {id})\n      }, 300)\n    } catch (error) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'dimension_calculation',\n          id,\n          error\n        }\n      }\n    }\n  })\n\n  // Carousel refresh handler (recalculates dimensions)\n  cyre.on(\n    EVENTS.REFRESH_CAROUSEL,\n    (state: {virtual: HoloVirtual; shadow: HoloShadow}) => {\n      try {\n        const {virtual, shadow} = state\n\n        if (!virtual?.id) {\n          return {\n            id: EVENTS.ERROR_HANDLER,\n            payload: {\n              source: 'refresh_carousel',\n              error: 'Invalid virtual state',\n              data: {virtualId: virtual?.id}\n            }\n          }\n        }\n\n        // Reset container styles for fresh measurement\n        shadow.container.setAttribute('style', '')\n\n        // Calculate dimensions\n        const updatedVirtual = calculateCarouselDimensions(virtual, shadow)\n\n        if (updatedVirtual) {\n          // Store updated state\n          _holo[virtual.id].setDimension = {...updatedVirtual}\n\n          // Continue the event chain to positioning\n          return {\n            id: EVENTS.SNAP_TO_POSITION,\n            payload: updatedVirtual\n          }\n        } else {\n          // If calculation fails, retry with delay\n          setTimeout(() => {\n            cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[virtual.id].getState)\n          }, 300)\n\n          return {\n            id: EVENTS.ERROR_HANDLER,\n            payload: {\n              source: 'refresh_carousel',\n              error: 'Failed to calculate dimensions',\n              id: virtual.id\n            }\n          }\n        }\n      } catch (error) {\n        return {\n          id: EVENTS.ERROR_HANDLER,\n          payload: {\n            source: 'refresh_carousel',\n            error: error instanceof Error ? error.message : 'Unknown error'\n          }\n        }\n      }\n    }\n  )\n\n  // Handle screen refresh (window resize)\n  cyre.on(EVENTS.REFRESH_SCREEN, () => {\n    // Get all carousel IDs\n    const carouselIds = Object.keys(_holo)\n\n    CyreLog.info(`Refreshing ${carouselIds.length} carousels`)\n\n    // Refresh each carousel\n    carouselIds.forEach(id => {\n      cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[id].getState)\n    })\n  })\n}\n\n/**\n * Register navigation events\n * These handle movement between slides\n */\nfunction registerNavigationEvents() {\n  // Go to next slide\n  cyre.on(EVENTS.NEXT_SLIDE, (virtual: HoloVirtual) => {\n    if (!virtual?.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'next_slide',\n          error: 'Invalid virtual state in next slide'\n        }\n      }\n    }\n\n    // Use centralized navigation function\n    goToNextSlide(virtual)\n  })\n\n  // Go to previous slide\n  cyre.on(EVENTS.PREV_SLIDE, (virtual: HoloVirtual) => {\n    if (!virtual?.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'prev_slide',\n          error: 'Invalid virtual state in previous slide'\n        }\n      }\n    }\n\n    // Use centralized navigation function\n    goToPrevSlide(virtual)\n  })\n\n  // Go to first slide\n  cyre.on(EVENTS.FIRST_SLIDE, (virtual: HoloVirtual) => {\n    if (!virtual?.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'first_slide',\n          error: 'Invalid virtual state in first slide'\n        }\n      }\n    }\n\n    // Use centralized navigation function\n    goToFirstSlide(virtual)\n  })\n\n  // Go to last slide\n  cyre.on(EVENTS.LAST_SLIDE, (virtual: HoloVirtual) => {\n    if (!virtual?.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'last_slide',\n          error: 'Invalid virtual state in last slide'\n        }\n      }\n    }\n\n    // Use centralized navigation function\n    goToLastSlide(virtual)\n  })\n\n  // Go to specific slide index\n  cyre.on(\n    EVENTS.GO_TO_SLIDE,\n    (payload: {virtual: HoloVirtual; index: number}) => {\n      if (!payload || !payload.virtual || !payload.virtual.id) {\n        return {\n          id: EVENTS.ERROR_HANDLER,\n          payload: {\n            source: 'go_to_slide',\n            error: 'Invalid payload for go to slide'\n          }\n        }\n      }\n\n      // Use centralized navigation function\n      goToSlide(payload.virtual, payload.index)\n    }\n  )\n\n  // Activate specific slide (focus on click)\n  cyre.on(EVENTS.ACTIVATE, (payload: [HTMLElement, HoloVirtual]) => {\n    const [element, virtual] = payload\n\n    if (!element || !virtual || !virtual.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'activate',\n          error: 'Invalid activate payload'\n        }\n      }\n    }\n\n    // Use centralized navigation function\n    activateSlide(element, virtual)\n  })\n\n  // Auto-animate forward\n  cyre.on(EVENTS.ANIMATE_FORWARD, (virtual: HoloVirtual) => {\n    if (!virtual || !virtual.id) return\n\n    // Use centralized animation function with forward direction\n    animateCarousel(virtual, true)\n  })\n\n  // Auto-animate backward\n  cyre.on(EVENTS.ANIMATE_BACKWARD, (virtual: HoloVirtual) => {\n    if (!virtual || !virtual.id) return\n\n    // Use centralized animation function with backward direction\n    animateCarousel(virtual, false)\n  })\n}\n\n/**\n * Register transform events\n * These handle the actual DOM transformations\n */\nfunction registerTransformEvents() {\n  // Snap to position handler\n  cyre.on(EVENTS.SNAP_TO_POSITION, (virtual: HoloVirtual) => {\n    // Just forward to SNAP (simpler name and logic separation)\n    return {\n      id: EVENTS.SNAP,\n      payload: virtual\n    }\n  })\n\n  // Snap handler (final step in the chain)\n  cyre.on(EVENTS.SNAP, (virtual: HoloVirtual) => {\n    if (!virtual?.id) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'snap',\n          error: 'Invalid virtual state in SNAP event'\n        }\n      }\n    }\n\n    CyreLog.info(\n      `SNAP event for ${virtual.id}: transformX=${virtual.transformX}, transformY=${virtual.transformY}`\n    )\n\n    try {\n      // Validate dimensions first to prevent NaN errors\n      if (\n        virtual.io.orientation &&\n        (!virtual.item.height || isNaN(virtual.item.height))\n      ) {\n        CyreLog.warn(\n          `Carousel ${virtual.id} item height not calculated yet. Attempting to fix...`\n        )\n        // Try to recalculate dimensions\n        setTimeout(() => {\n          cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[virtual.id].getState)\n        }, 100)\n        return\n      }\n\n      if (\n        !virtual.io.orientation &&\n        (!virtual.item.width || isNaN(virtual.item.width))\n      ) {\n        CyreLog.warn(\n          `Carousel ${virtual.id} item width not calculated yet. Attempting to fix...`\n        )\n        // Try to recalculate dimensions\n        setTimeout(() => {\n          cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[virtual.id].getState)\n        }, 100)\n        return\n      }\n\n      // Update style to enable transitions\n      _holo[virtual.id].updateStyle = 1\n\n      // Apply orientation-specific transforms - THIS IS CRITICAL\n      const transformedVirtual = applyTransform(virtual)\n\n      // Safety check for NaN values\n      if (\n        isNaN(transformedVirtual.transformX) ||\n        isNaN(transformedVirtual.transformY)\n      ) {\n        CyreLog.error(\n          `NaN transform values detected for ${virtual.id}: X=${transformedVirtual.transformX}, Y=${transformedVirtual.transformY}`\n        )\n        // Try to repair\n        transformedVirtual.transformX = isNaN(transformedVirtual.transformX)\n          ? 0\n          : transformedVirtual.transformX\n        transformedVirtual.transformY = isNaN(transformedVirtual.transformY)\n          ? 0\n          : transformedVirtual.transformY\n      }\n\n      // Update state immutably\n      _holo[virtual.id].setState = {...transformedVirtual}\n\n      // CRITICAL: Direct DOM manipulation for immediate visual feedback\n      const carousel = document.getElementById(virtual.id)\n      if (carousel) {\n        const container = carousel.querySelector(\n          '.holo-container'\n        ) as HTMLElement\n        if (container) {\n          // Ensure we're never passing NaN values to CSS\n          const safeX = isNaN(transformedVirtual.transformX)\n            ? 0\n            : transformedVirtual.transformX\n          const safeY = isNaN(transformedVirtual.transformY)\n            ? 0\n            : transformedVirtual.transformY\n\n          container.style.transform = `translate3d(${safeX}px, ${safeY}px, 0px)`\n          CyreLog.debug(\n            `Applied direct transform: translate3d(${safeX}px, ${safeY}px, 0px)`\n          )\n        }\n      }\n\n      // Return the event for visualization or UI updates if needed\n      return {\n        id: EVENTS.TRANSFORM_COMPLETE,\n        payload: {\n          id: virtual.id,\n          position: getCurrentSlideIndex(transformedVirtual)\n        }\n      }\n    } catch (error) {\n      return {\n        id: EVENTS.ERROR_HANDLER,\n        payload: {\n          source: 'snap',\n          error: error instanceof Error ? error.message : 'Error in SNAP event',\n          id: virtual.id\n        }\n      }\n    }\n  })\n\n  // Transform complete handler (for UI updates)\n  cyre.on(EVENTS.TRANSFORM_COMPLETE, payload => {\n    // No additional action needed, but can be subscribed to by UI components\n    // for updating indicators or other UI elements\n  })\n}\n\n/**\n * Register error handling events\n */\nfunction registerErrorEvents() {\n  // Central error handler\n  cyre.on(EVENTS.ERROR_HANDLER, payload => {\n    const {source, error, id} = payload\n\n    CyreLog.error(`Holo Error [${source}]:`, error)\n\n    // For ID-specific errors, we can try recovery actions\n    if (id && _holo[id]) {\n      // Example recovery: Try to refresh the carousel\n      if (source === 'dimension_calculation') {\n        CyreLog.info(`Attempting to recover ${id} via refresh`)\n        setTimeout(\n          () => cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[id].getState),\n          200\n        )\n      }\n    }\n  })\n}\n\n/**\n * Register performance monitoring events\n */\nfunction registerPerformanceEvents() {\n  // Performance monitor\n  cyre.on(EVENTS.PERFORMANCE_MONITOR, payload => {\n    const {id} = payload\n\n    if (!id || !_holo[id]) return\n\n    // Get Cyre performance metrics\n    const metrics = cyre.getPerformanceState()\n\n    // If stress is high, apply optimizations\n    if (metrics.stress > 0.8) {\n      return {\n        id: EVENTS.PERFORMANCE_OPTIMIZE,\n        payload: {\n          id,\n          stress: metrics.stress,\n          level: 'high'\n        }\n      }\n    } else if (metrics.stress > 0.5) {\n      return {\n        id: EVENTS.PERFORMANCE_OPTIMIZE,\n        payload: {\n          id,\n          stress: metrics.stress,\n          level: 'medium'\n        }\n      }\n    }\n  })\n\n  // Performance optimization\n  cyre.on(EVENTS.PERFORMANCE_OPTIMIZE, payload => {\n    const {id, level} = payload\n\n    if (!id || !_holo[id]) return\n\n    const virtual = _holo[id].getVirtual\n\n    // Apply optimizations based on level\n    switch (level) {\n      case 'high':\n        // Disable animations, increase throttling\n        _holo[id].setState = {\n          ...virtual,\n          io: {\n            ...virtual.io,\n            animate: 0,\n            wheel: 0,\n            duration: Math.max(400, virtual.io.duration || 0)\n          }\n        }\n        break\n      case 'medium':\n        // Slow down animations\n        _holo[id].setState = {\n          ...virtual,\n          io: {\n            ...virtual.io,\n            duration: Math.max(300, virtual.io.duration || 0)\n          }\n        }\n        break\n    }\n  })\n}\n\n/**\n * Register global actions with appropriate protection settings\n */\nfunction registerGlobalActions() {\n  cyre.action([\n    // Core state events\n    {\n      id: EVENTS.STATE_UPDATE,\n      detectChanges: true, // Only process if data changed\n      throttle: 50 // Prevent rapid updates\n    },\n    {\n      id: EVENTS.STATE_BATCH_UPDATE,\n      detectChanges: true\n    },\n\n    // Dimension events\n    {\n      id: EVENTS.INIT_DIMENSIONS,\n      throttle: 100\n    },\n    {\n      id: EVENTS.REFRESH_CAROUSEL,\n      throttle: 100\n    },\n    {\n      id: EVENTS.REFRESH_SCREEN,\n      throttle: 200 // Limit excessive resize handling\n    },\n\n    // Navigation events\n    {\n      id: EVENTS.NEXT_SLIDE,\n      throttle: 300 // Prevent rapid clicking\n    },\n    {\n      id: EVENTS.PREV_SLIDE,\n      throttle: 300\n    },\n    {\n      id: EVENTS.FIRST_SLIDE\n    },\n    {\n      id: EVENTS.LAST_SLIDE\n    },\n    {\n      id: EVENTS.GO_TO_SLIDE,\n      throttle: 300\n    },\n    {\n      id: EVENTS.ACTIVATE,\n      throttle: 300\n    },\n\n    // Transform events\n    {\n      id: EVENTS.SNAP_TO_POSITION,\n      throttle: 50\n    },\n    {\n      id: EVENTS.SNAP,\n      throttle: 50\n    },\n    {\n      id: EVENTS.TRANSFORM_COMPLETE\n    },\n\n    // Error handling\n    {\n      id: EVENTS.ERROR_HANDLER\n    },\n\n    // Performance events\n    {\n      id: EVENTS.PERFORMANCE_MONITOR,\n      interval: 5000, // Check every 5 seconds\n      repeat: true // Run continuously\n    },\n    {\n      id: EVENTS.PERFORMANCE_OPTIMIZE,\n      throttle: 1000 // Apply optimizations at most once per second\n    }\n  ])\n}\n\n// Update this function in holo-events.ts\n\n/**\n * Initialize event handlers for a specific carousel instance\n * Creates custom event IDs for this instance and links them to global handlers\n */\nexport const initializeInstanceEvents = (\n  id: string,\n  options: any = {}\n): void => {\n  if (!id || typeof id !== 'string') {\n    CyreLog.error(`Cannot initialize events for invalid carousel: ${id}`)\n    return\n  }\n\n  if (!_holo[id]) {\n    CyreLog.error(`Carousel ${id} not found for event initialization`)\n    return\n  }\n\n  const virtual = _holo[id].getVirtual\n\n  // Create instance-specific event IDs\n  const eventIds = createEventIds(id)\n\n  // Store these IDs in the virtual state for reference\n  _holo[id].setState = {\n    ...virtual,\n    eventIds\n  }\n\n  // IMPORTANT: Check for existing event handlers before registering new ones\n  // Prevents duplicate subscriptions when updating options\n\n  // Clean up any existing event handlers with these IDs first\n  Object.values(eventIds).forEach(eventId => {\n    if (eventId) {\n      cyre.forget(eventId)\n    }\n  })\n\n  // Register instance-specific handlers that forward to global ones\n  cyre.on(eventIds.animate, payload => {\n    CyreLog.info(`Animation event triggered for ${id}`)\n    return {\n      id:\n        virtual.io.animateDirection > 0\n          ? EVENTS.ANIMATE_FORWARD\n          : EVENTS.ANIMATE_BACKWARD,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.snap, payload => {\n    return {\n      id: EVENTS.SNAP,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.prevSlide, payload => {\n    return {\n      id: EVENTS.PREV_SLIDE,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.nextSlide, payload => {\n    return {\n      id: EVENTS.NEXT_SLIDE,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.firstSlide, payload => {\n    return {\n      id: EVENTS.FIRST_SLIDE,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.lastSlide, payload => {\n    return {\n      id: EVENTS.LAST_SLIDE,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.goToSlide, payload => {\n    return {\n      id: EVENTS.GO_TO_SLIDE,\n      payload: {\n        virtual: _holo[id].getVirtual,\n        index: payload.index\n      }\n    }\n  })\n\n  cyre.on(eventIds.activate, payload => {\n    return {\n      id: EVENTS.ACTIVATE,\n      payload\n    }\n  })\n\n  cyre.on(eventIds.refresh, payload => {\n    return {\n      id: EVENTS.REFRESH_CAROUSEL,\n      payload: payload || _holo[id].getState\n    }\n  })\n\n  cyre.on(eventIds.error, payload => {\n    return {\n      id: EVENTS.ERROR_HANDLER,\n      payload: {\n        ...payload,\n        id\n      }\n    }\n  })\n\n  // Configure instance-specific actions\n  cyre.action([\n    {\n      id: eventIds.animate,\n      interval: options.duration || ANIMATION.DURATION,\n      repeat: options.animate ? true : 0, // FIXED: Use true for infinite looping if animate is enabled\n      log: true // Enable logging for animation events\n    },\n    {\n      id: eventIds.snap,\n      throttle: 50\n    },\n    {\n      id: eventIds.prevSlide,\n      throttle: 300\n    },\n    {\n      id: eventIds.nextSlide,\n      throttle: 300\n    },\n    {\n      id: eventIds.firstSlide\n    },\n    {\n      id: eventIds.lastSlide\n    },\n    {\n      id: eventIds.goToSlide,\n      throttle: 300\n    },\n    {\n      id: eventIds.activate,\n      throttle: 300\n    },\n    {\n      id: eventIds.refresh,\n      throttle: 100\n    },\n    {\n      id: eventIds.error\n    }\n  ])\n\n  // FIXED: Start auto-animation only if specifically enabled\n  if (options.animate && options.animate !== 0) {\n    CyreLog.info(`Starting animation for carousel ${id}`)\n    cyre.call(eventIds.animate, _holo[id].getVirtual)\n  }\n\n  // Start performance monitoring if enabled\n  if (options.performance !== 0) {\n    // Schedule periodic performance checks\n    cyre.action({\n      id: `performance_monitor_${id}`,\n      interval: 5000,\n      repeat: true\n    })\n\n    cyre.on(`performance_monitor_${id}`, () => {\n      return {\n        id: EVENTS.PERFORMANCE_MONITOR,\n        payload: {id}\n      }\n    })\n\n    // Start monitoring\n    cyre.call(`performance_monitor_${id}`)\n  }\n}\n","//src/libs/holo-essentials.ts\n\nimport {cyre} from 'cyre'\nimport type {\n  HoloVirtual,\n  HoloDimensions,\n  HoloDatabase,\n  HoloIOOptions\n} from '../types/interface'\nimport {safeEventCall, createEventIds} from '../core/holo-events'\n\n/**\n * Main instance - holo database object\n */\nexport const _holo: HoloDatabase = {}\n\n/**\n * Snap position to grid\n */\nexport const snapToGrid = (position: number, gridSize: number): number => {\n  return Math.round(position / gridSize) * gridSize\n}\n\n/**\n * Determines if interaction was a click based on time elapsed\n */\nexport const isClickEvent = (timeElapsed: number): number => {\n  return timeElapsed < 250 ? 1 : 0 // Handle click, touch, double click or long-touch events\n}\n\n/**\n * Calculate swipe speed\n */\nexport const calculateSwipeSpeed = (\n  distance: number,\n  timeElapsed: number\n): number => {\n  return distance / timeElapsed\n}\n\n/**\n * Update IO parameters with immutable approach\n */\nexport const updateIOOptions = (\n  carouselParameter: HoloIOOptions,\n  io: Partial<HoloIOOptions> = {}\n): HoloIOOptions => {\n  // Filter valid attributes only\n  const validAttributes = Object.entries(io).reduce((valid, [key, value]) => {\n    if (key in carouselParameter) {\n      return {...valid, [key]: value}\n    }\n    console.error('@Holo: unknown carousel Parameter', key)\n    return valid\n  }, {})\n\n  // Return a new object with updated values\n  return {...carouselParameter, ...validAttributes}\n}\n\n/**\n * Get element dimensions including margins\n */\nexport const _getItemWidthHeight = (e: HTMLElement): HoloDimensions => {\n  if (!e) return {width: 0, height: 0}\n\n  const outer: HoloDimensions = {\n    width: e.offsetWidth,\n    height: e.offsetHeight\n  }\n\n  const style = window.getComputedStyle(e, null)\n\n  // Add margins to dimensions\n  const marginLeft = parseInt(style.marginLeft) || 0\n  const marginRight = parseInt(style.marginRight) || 0\n  const marginTop = parseInt(style.marginTop) || 0\n  const marginBottom = parseInt(style.marginBottom) || 0\n\n  outer.width += marginLeft + marginRight\n  outer.height += marginTop + marginBottom\n\n  return outer\n}\n\n/**\n * Calculate slider position boundaries\n */\nexport const calculateSliderPosition = (virtual: HoloVirtual): HoloVirtual => {\n  const updatedVirtual = {...virtual}\n\n  if (updatedVirtual.transformX >= 100) {\n    updatedVirtual.transformX = 100\n    updatedVirtual.endOfSlide = 1 // Left end of the carousel\n  } else if (\n    updatedVirtual.transformX + 100 <=\n    updatedVirtual.endOfSlidePosition!\n  ) {\n    updatedVirtual.transformX = updatedVirtual.endOfSlidePosition! - 100\n    updatedVirtual.endOfSlide = -1 // Right end of the carousel\n  } else {\n    updatedVirtual.endOfSlide = 0 // In the middle of carousel\n  }\n\n  return updatedVirtual\n}\n\n/**\n * Manage active/highlighted slides\n * Uses safeEventCall for better error handling\n */\nexport const activate = ([element, virtual]: [\n  HTMLElement,\n  HoloVirtual\n]): void => {\n  const updatedVirtual = {\n    ...virtual,\n    transformX: -Math.abs(element.offsetLeft)\n  }\n\n  // Get the event ID from virtual state or create consistent ID\n  const snapEventId = virtual.eventIds?.snap || `snap_${updatedVirtual.id}`\n\n  // Use safe event call with fallback to global SNAP event\n  safeEventCall(snapEventId, updatedVirtual, 'SNAP')\n  element.classList.add('active')\n}\n\n/**\n * Go to previous slide\n * Uses safeEventCall for better error handling\n */\nexport const prvSlide = (virtual: HoloVirtual): void => {\n  if (virtual.endOfSlide === 1) return // At left end, cannot go further left\n\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.transformX + (virtual.carousel.width || 0),\n    transformY: virtual.transformY + (virtual.carousel.height || 0)\n  }\n\n  // Get the event ID from virtual state or create consistent ID\n  const snapEventId = virtual.eventIds?.snap || `snap_${updatedVirtual.id}`\n\n  // Use safe event call with fallback to global SNAP event\n  safeEventCall(snapEventId, updatedVirtual, 'SNAP')\n}\n\n/**\n * Go to next slide\n * Uses safeEventCall for better error handling\n */\nexport const nxtSlide = (virtual: HoloVirtual): void => {\n  if (virtual.endOfSlide === -1) return // At right end, cannot go further right\n\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.transformX - (virtual.carousel.width || 0),\n    transformY: virtual.transformY - (virtual.carousel.height || 0)\n  }\n\n  // Get the event ID from virtual state or create consistent ID\n  const snapEventId = virtual.eventIds?.snap || `snap_${updatedVirtual.id}`\n\n  // Use safe event call with fallback to global SNAP event\n  safeEventCall(snapEventId, updatedVirtual, 'SNAP')\n}\n\n/**\n * Jump to first slide\n * Uses safeEventCall for better error handling\n */\nexport const firstSlide = (virtual: HoloVirtual): void => {\n  const updatedVirtual = {\n    ...virtual,\n    transformX: 0,\n    transformY: 0,\n    endOfSlide: 1\n  }\n\n  // Get the event ID from virtual state or create consistent ID\n  const snapEventId = virtual.eventIds?.snap || `snap_${updatedVirtual.id}`\n\n  // Use safe event call with fallback to global SNAP event\n  safeEventCall(snapEventId, updatedVirtual, 'SNAP')\n}\n\n/**\n * Jump to last slide\n * Uses safeEventCall for better error handling\n */\nexport const lastSlide = (virtual: HoloVirtual): void => {\n  const updatedVirtual = {\n    ...virtual,\n    transformX: virtual.endOfSlidePosition!,\n    transformY: virtual.endOfSlidePosition!,\n    endOfSlide: -1\n  }\n\n  // Get the event ID from virtual state or create consistent ID\n  const snapEventId = virtual.eventIds?.snap || `snap_${updatedVirtual.id}`\n\n  // Use safe event call with fallback to global SNAP event\n  safeEventCall(snapEventId, updatedVirtual, 'SNAP')\n}\n\n/**\n * Animate slides forward\n * Uses safeEventCall for better error handling\n */\nexport const animateSlideForward = (virtual: HoloVirtual): void => {\n  console.log('animating forward', virtual.id)\n\n  // Get event IDs from virtual state or create consistent IDs\n  const eventIds = virtual.eventIds || createEventIds(virtual.id)\n\n  if (virtual.endOfSlide === -1) {\n    safeEventCall(eventIds.firstSlide, virtual, 'first_slide')\n  } else {\n    safeEventCall(eventIds.nextSlide, virtual, 'next_slide')\n  }\n}\n\n/**\n * Animate slides backward\n * Uses safeEventCall for better error handling\n */\nexport const animateSlideBackward = (virtual: HoloVirtual): void => {\n  console.log('animating backward', virtual.id)\n\n  // Get event IDs from virtual state or create consistent IDs\n  const eventIds = virtual.eventIds || createEventIds(virtual.id)\n\n  if (virtual.endOfSlide === 1) {\n    safeEventCall(eventIds.lastSlide, virtual, 'last_slide')\n  } else {\n    safeEventCall(eventIds.prevSlide, virtual, 'prev_slide')\n  }\n}\n\n/**\n * Mouse wheel controller\n * Uses safeEventCall for better error handling\n */\nexport const wheeler = (e: WheelEvent, id: string): void => {\n  e.preventDefault()\n  const virtual = _holo[id].getVirtual\n\n  // Get event IDs from virtual state or create consistent IDs\n  const eventIds = virtual.eventIds || createEventIds(virtual.id)\n\n  if (e.deltaY < 0) {\n    safeEventCall(eventIds.prevSlide, virtual, 'prev_slide')\n  } else if (e.deltaY > 0) {\n    safeEventCall(eventIds.nextSlide, virtual, 'next_slide')\n  }\n}\n","//src/components/holo-relationships.ts\n\nimport {CyreLog} from 'cyre'\n\n/**\n * Interface for tracking parent-child relationships between carousels\n */\nexport interface HoloRelationship {\n  id: string\n  parentId?: string\n  childIds: string[]\n  level: number // Nesting level (0 = root)\n}\n\n/**\n * Global registry of carousel relationships\n */\nexport const _holoRelationships: Record<string, HoloRelationship> = {}\n\n/**\n * Register a carousel as a child of another\n */\nexport const registerNestedCarousel = (\n  childId: string,\n  parentId: string\n): void => {\n  // Check if we already have this relationship\n  if (_holoRelationships[childId]?.parentId === parentId) {\n    return\n  }\n\n  // Calculate nesting level\n  const parentLevel = _holoRelationships[parentId]?.level || 0\n  const childLevel = parentLevel + 1\n\n  // Create or update child relationship\n  _holoRelationships[childId] = {\n    id: childId,\n    parentId,\n    childIds: _holoRelationships[childId]?.childIds || [],\n    level: childLevel\n  }\n\n  // Update parent's children list\n  if (!_holoRelationships[parentId]) {\n    _holoRelationships[parentId] = {\n      id: parentId,\n      childIds: [childId],\n      level: parentLevel\n    }\n  } else {\n    if (!_holoRelationships[parentId].childIds.includes(childId)) {\n      _holoRelationships[parentId].childIds.push(childId)\n    }\n  }\n\n  CyreLog.info(\n    `Registered carousel ${childId} as child of ${parentId} (level ${childLevel})`\n  )\n}\n\n/**\n * Check if a carousel is a child of another\n */\nexport const isChildOf = (childId: string, parentId: string): boolean => {\n  return _holoRelationships[childId]?.parentId === parentId\n}\n\n/**\n * Check if a carousel is a parent\n */\nexport const isParent = (id: string): boolean => {\n  return (_holoRelationships[id]?.childIds.length || 0) > 0\n}\n\n/**\n * Get all ancestors of a carousel\n * Returns an array of ancestor IDs, from immediate parent to root\n */\nexport const getAncestors = (id: string): string[] => {\n  const ancestors: string[] = []\n  let currentId = id\n\n  while (_holoRelationships[currentId]?.parentId) {\n    const parentId = _holoRelationships[currentId].parentId\n    if (parentId) {\n      ancestors.push(parentId)\n      currentId = parentId\n    } else {\n      break\n    }\n  }\n\n  return ancestors\n}\n\n/**\n * Get all descendants of a carousel\n * Returns an array of descendant IDs\n */\nexport const getDescendants = (id: string): string[] => {\n  const result: string[] = []\n  const stack = [...(_holoRelationships[id]?.childIds || [])]\n\n  while (stack.length > 0) {\n    const current = stack.pop()\n    if (current) {\n      result.push(current)\n\n      const children = _holoRelationships[current]?.childIds || []\n      stack.push(...children)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get direct children of a carousel\n */\nexport const getChildren = (id: string): string[] => {\n  return _holoRelationships[id]?.childIds || []\n}\n\n/**\n * Get parent of a carousel\n */\nexport const getParent = (id: string): string | undefined => {\n  return _holoRelationships[id]?.parentId\n}\n\n/**\n * Temporarily pause all parent carousels\n * Useful when interacting with a nested carousel\n */\nexport const pauseParentCarousels = (id: string): void => {\n  const ancestors = getAncestors(id)\n\n  ancestors.forEach(ancestorId => {\n    // Signal to IO that this ancestor should temporarily disable interactions\n    document\n      .getElementById(ancestorId)\n      ?.setAttribute('data-child-active', 'true')\n  })\n}\n\n/**\n * Resume all parent carousels\n */\nexport const resumeParentCarousels = (id: string): void => {\n  const ancestors = getAncestors(id)\n\n  ancestors.forEach(ancestorId => {\n    document.getElementById(ancestorId)?.removeAttribute('data-child-active')\n  })\n}\n\n/**\n * Unregister a carousel and all its relationships\n */\nexport const unregisterCarousel = (id: string): void => {\n  // Remove from parent's children list\n  const parentId = _holoRelationships[id]?.parentId\n  if (parentId && _holoRelationships[parentId]) {\n    _holoRelationships[parentId].childIds = _holoRelationships[\n      parentId\n    ].childIds.filter(childId => childId !== id)\n  }\n\n  // Get all children\n  const childIds = [...(_holoRelationships[id]?.childIds || [])]\n\n  // Remove this carousel\n  delete _holoRelationships[id]\n\n  // Update children (they no longer have a parent)\n  childIds.forEach(childId => {\n    if (_holoRelationships[childId]) {\n      _holoRelationships[childId].parentId = undefined\n      _holoRelationships[childId].level = 0\n    }\n  })\n\n  CyreLog.info(`Unregistered carousel ${id} and its relationships`)\n}\n","//src/components/holo-touch.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloVirtual, TouchState} from '../types/interface'\nimport {_holo} from '../libs/holo-essentials'\nimport {applyTransform} from './orientation-handler'\nimport {TOUCH_EVENTS, EVENTS, touchState} from '../config/holo-config'\nimport {\n  isChildOf,\n  pauseParentCarousels,\n  resumeParentCarousels,\n  getAncestors\n} from './holo-relations'\n\n/**\n * Initialize the touch system with Cyre events\n */\nexport const initializeTouchSystem = (): void => {\n  CyreLog.info('Initializing touch system')\n\n  try {\n    registerTouchEventHandlers()\n    registerDomEventListeners()\n  } catch (error) {\n    CyreLog.error('Error during touch system initialization:', error)\n  }\n}\n\n/**\n * Register touch event handlers and intralink chains\n */\nfunction registerTouchEventHandlers(): void {\n  // Touch start handler\n  cyre.on(\n    TOUCH_EVENTS.TOUCH_START,\n    (payload: {event: TouchEvent | MouseEvent; id: string; options?: any}) => {\n      const {event, id, options = {}} = payload\n\n      if (!_holo[id]?.getVirtual) {\n        CyreLog.error(`No carousel found with ID: ${id}`)\n        return\n      }\n\n      const virtual = _holo[id].getVirtual\n\n      // Check if touch is disabled in options\n      if (virtual.io.drag === 0 && virtual.io.swipe === 0) {\n        return\n      }\n\n      // Check if this is a nested carousel\n      const isNested = virtual.nestedLevel > 0 || !!virtual.parentId\n\n      // If nested, pause parent carousel interactions\n      if (isNested) {\n        pauseParentCarousels(id)\n      }\n\n      // Get initial touch/mouse position\n      const clientX =\n        'touches' in event ? event.touches[0].clientX : event.clientX\n      const clientY =\n        'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Update touch state\n      touchState.id = id\n      touchState.virtual = virtual\n      touchState.startX = clientX\n      touchState.startY = clientY\n      touchState.currentX = clientX\n      touchState.currentY = clientY\n      touchState.lastX = clientX\n      touchState.lastY = clientY\n      touchState.distanceX = 0\n      touchState.distanceY = 0\n      touchState.directionX = 0\n      touchState.directionY = 0\n      touchState.velocityX = 0\n      touchState.velocityY = 0\n      touchState.startTransformX = virtual.transformX\n      touchState.startTransformY = virtual.transformY\n      touchState.pressed = true\n      touchState.startTime = performance.now()\n      touchState.orientation = !!virtual.io.orientation\n      touchState.targetElement = event.target as HTMLElement\n      touchState.moved = false\n      touchState.isNested = isNested\n\n      // Disable transitions during drag\n      _holo[id].updateStyle = 0\n\n      // Add active touch class\n      document.getElementById(id)?.classList.add('holo-touch-active')\n\n      // Continue chain to appropriate drag handler based on orientation\n      return {\n        id: touchState.orientation\n          ? TOUCH_EVENTS.DRAG_VERTICAL\n          : TOUCH_EVENTS.DRAG_HORIZONTAL,\n        payload: touchState\n      }\n    }\n  )\n\n  // Horizontal drag handler\n  cyre.on(TOUCH_EVENTS.DRAG_HORIZONTAL, (state: TouchState) => {\n    if (!state.pressed || !state.id || !state.virtual) {\n      return\n    }\n\n    // Calculate distance moved\n    const distanceX = state.startX - state.currentX\n\n    // Calculate direction explicitly by comparing with last position\n    // This is key to fixing the direction detection issues\n    if (state.currentX !== state.lastX) {\n      touchState.directionX = state.currentX < state.lastX ? 1 : -1 // 1 = right, -1 = left\n      touchState.lastX = state.currentX\n      touchState.moved = true // Mark that we've actually moved\n    }\n\n    // Update touch state\n    touchState.distanceX = distanceX\n\n    // Calculate new transform position\n    const newTransformX = state.startTransformX - distanceX * state.multiplier\n\n    // Update virtual state with light transform (no snapping during drag)\n    const updatedVirtual = {\n      ...state.virtual,\n      transformX: newTransformX\n    }\n\n    // Apply constraints through transform function\n    const transformedVirtual = applyTransform(updatedVirtual, true)\n\n    // Update state\n    _holo[state.id].setState = transformedVirtual\n\n    // Keep track of latest virtual state\n    touchState.virtual = transformedVirtual\n\n    // Keep tracking velocity during drag\n    return {\n      id: TOUCH_EVENTS.TRACK_VELOCITY,\n      payload: touchState\n    }\n  })\n\n  // Vertical drag handler\n  cyre.on(TOUCH_EVENTS.DRAG_VERTICAL, (state: TouchState) => {\n    if (!state.pressed || !state.id || !state.virtual) {\n      return\n    }\n\n    // Calculate distance moved\n    const distanceY = state.startY - state.currentY\n\n    // Calculate direction explicitly\n    if (state.currentY !== state.lastY) {\n      touchState.directionY = state.currentY < state.lastY ? 1 : -1 // 1 = down, -1 = up\n      touchState.lastY = state.currentY\n      touchState.moved = true // Mark that we've actually moved\n    }\n\n    // Update touch state\n    touchState.distanceY = distanceY\n\n    // Calculate new transform position\n    const newTransformY = state.startTransformY - distanceY * state.multiplier\n\n    // Update virtual state with light transform (no snapping during drag)\n    const updatedVirtual = {\n      ...state.virtual,\n      transformY: newTransformY\n    }\n\n    // Apply constraints through transform function\n    const transformedVirtual = applyTransform(updatedVirtual, true)\n\n    // Update state\n    _holo[state.id].setState = transformedVirtual\n\n    // Keep track of latest virtual state\n    touchState.virtual = transformedVirtual\n\n    // Keep tracking velocity during drag\n    return {\n      id: TOUCH_EVENTS.TRACK_VELOCITY,\n      payload: touchState\n    }\n  })\n\n  // Velocity tracking handler\n  cyre.on(TOUCH_EVENTS.TRACK_VELOCITY, (state: TouchState) => {\n    if (!state.pressed || !state.virtual) {\n      return\n    }\n\n    const elapsed = performance.now() - state.startTime\n\n    // Calculate velocity (pixels per millisecond)\n    touchState.velocityX = calculateSwipeSpeed(state.distanceX, elapsed)\n    touchState.velocityY = calculateSwipeSpeed(state.distanceY, elapsed)\n  })\n\n  // Touch end handler - CRITICAL FOR CORRECT BEHAVIOR\n  cyre.on(TOUCH_EVENTS.TOUCH_END, () => {\n    if (!touchState.id || !touchState.virtual) {\n      return\n    }\n\n    // Calculate time elapsed for click detection\n    const timeElapsed = performance.now() - touchState.startTime\n\n    // Save a copy of relevant data before resetting state\n    const touchData = {\n      id: touchState.id,\n      virtual: touchState.virtual,\n      targetElement: touchState.targetElement,\n      distanceX: touchState.distanceX,\n      distanceY: touchState.distanceY,\n      directionX: touchState.directionX,\n      directionY: touchState.directionY,\n      velocityX: touchState.velocityX,\n      velocityY: touchState.velocityY,\n      orientation: touchState.orientation,\n      startTime: touchState.startTime,\n      moved: touchState.moved, // Include the moved flag to distinguish real swipes\n      isNested: touchState.isNested\n    }\n\n    // Remove active touch class\n    document\n      .getElementById(touchState.id)\n      ?.classList.remove('holo-touch-active')\n\n    // If nested, resume parent interactions\n    if (touchState.isNested) {\n      resumeParentCarousels(touchState.id)\n    }\n\n    // Reset pressed state immediately to prevent further movement\n    touchState.pressed = false\n\n    // Process the end of touch interaction\n    return {\n      id: TOUCH_EVENTS.PROCESS_TOUCH_END,\n      payload: {\n        touchState: touchData,\n        timeElapsed\n      }\n    }\n  })\n\n  // Process touch end - conditional intralink pattern\n  cyre.on(\n    TOUCH_EVENTS.PROCESS_TOUCH_END,\n    (payload: {touchState: any; timeElapsed: number}) => {\n      const {touchState, timeElapsed} = payload\n\n      if (!touchState.id || !touchState.virtual) {\n        return\n      }\n\n      const carouselId = touchState.id\n      const virtual = touchState.virtual\n      const targetElement = touchState.targetElement\n\n      // Determine velocity based on orientation\n      const velocity = touchState.orientation\n        ? touchState.velocityY\n        : touchState.velocityX\n      const absVelocity = Math.abs(velocity)\n\n      // Get explicit direction from tracked state\n      const direction = touchState.orientation\n        ? touchState.directionY\n        : touchState.directionX\n\n      // Get event IDs from virtual state or use defaults\n      const eventIds = virtual.eventIds || {\n        nextSlide: `next_slide_${carouselId}`,\n        prevSlide: `prev_slide_${carouselId}`,\n        snap: `snap_${carouselId}`,\n        activate: `activate_${carouselId}`\n      }\n\n      // Enable transitions for snapping\n      _holo[carouselId].updateStyle = 1\n\n      try {\n        // CONDITIONAL INTRALINK: different actions based on gesture\n\n        // Case 1: Swipe/flick (higher velocity) - IMPROVED DETECTION\n        if (absVelocity > 0.5 && touchState.moved && virtual.io.swipe !== 0) {\n          // Log the swipe for debugging\n          CyreLog.info(\n            `Swipe detected: direction=${direction}, velocity=${absVelocity}`\n          )\n\n          // Determine direction using our explicitly tracked direction\n          if (direction > 0) {\n            // Swipe right/down (positive direction)\n            return {\n              id: eventIds.nextSlide,\n              payload: virtual\n            }\n          } else if (direction < 0) {\n            // Swipe left/up (negative direction)\n            return {\n              id: eventIds.prevSlide,\n              payload: virtual\n            }\n          }\n        }\n        // Case 2: It's a tap/click (short duration, minimal movement)\n        else if (\n          isClickEvent(timeElapsed) &&\n          !touchState.moved && // Only count as click if we didn't really move\n          targetElement &&\n          virtual.io.onClick\n        ) {\n          // Find the closest carousel item\n          const closestItem = targetElement.closest('.holo')\n\n          if (closestItem) {\n            return {\n              id: eventIds.activate,\n              payload: [closestItem as HTMLElement, virtual]\n            }\n          }\n        }\n\n        // Default case: Snap to nearest position if snap is enabled\n        if (virtual.io.snap) {\n          return {\n            id: eventIds.snap,\n            payload: virtual\n          }\n        }\n\n        // Otherwise, apply transform constraints but don't snap\n        const constrainedVirtual = applyTransform(virtual, false)\n        _holo[carouselId].setState = constrainedVirtual\n      } catch (error) {\n        CyreLog.error('Error in touch end processing:', error)\n\n        // Fallback to snap (safest option)\n        return {\n          id: eventIds.snap,\n          payload: virtual\n        }\n      }\n    }\n  )\n\n  // Configure touch event actions\n  cyre.action([\n    {\n      id: TOUCH_EVENTS.TOUCH_START,\n      throttle: 50 // Prevent double triggers\n    },\n    {\n      id: TOUCH_EVENTS.DRAG_HORIZONTAL\n    },\n    {\n      id: TOUCH_EVENTS.DRAG_VERTICAL\n    },\n    {\n      id: TOUCH_EVENTS.TRACK_VELOCITY,\n      throttle: 100 // Don't need constant updates\n    },\n    {\n      id: TOUCH_EVENTS.TOUCH_END,\n      throttle: 50\n    },\n    {\n      id: TOUCH_EVENTS.PROCESS_TOUCH_END\n    }\n  ])\n}\n\n/**\n * Register document-level event listeners for touch/mouse\n */\nfunction registerDomEventListeners(): void {\n  // Mouse/touch move handler\n  const handlePointerMove = (e: MouseEvent | TouchEvent): void => {\n    if (!touchState.pressed || !touchState.id) return\n\n    // Prevent default to avoid page scrolling during drag\n    e.preventDefault()\n\n    // Update current position\n    if ('touches' in e && e.touches.length > 0) {\n      touchState.currentX = e.touches[0].clientX\n      touchState.currentY = e.touches[0].clientY\n    } else if ('clientX' in e) {\n      touchState.currentX = e.clientX\n      touchState.currentY = e.clientY\n    } else {\n      // If no valid coordinates, end the touch interaction\n      handlePointerEnd(e)\n      return\n    }\n\n    // Call appropriate drag event based on orientation\n    cyre.call(\n      touchState.orientation\n        ? TOUCH_EVENTS.DRAG_VERTICAL\n        : TOUCH_EVENTS.DRAG_HORIZONTAL,\n      touchState\n    )\n  }\n\n  // Mouse/touch end handler\n  const handlePointerEnd = (e: MouseEvent | TouchEvent): void => {\n    // Only process if we're in a pressed state\n    if (!touchState.pressed) return\n\n    // Prevent default behavior\n    e.preventDefault()\n\n    // Call the touch end event\n    cyre.call(TOUCH_EVENTS.TOUCH_END)\n  }\n\n  // Add document-level listeners to catch events even if they occur outside the element\n  document.addEventListener('mousemove', handlePointerMove, {passive: false})\n  document.addEventListener('touchmove', handlePointerMove, {passive: false})\n  document.addEventListener('mouseup', handlePointerEnd, {passive: false})\n  document.addEventListener('touchend', handlePointerEnd, {passive: false})\n  document.addEventListener('touchcancel', handlePointerEnd, {passive: false})\n  document.addEventListener('mouseleave', handlePointerEnd, {passive: false})\n}\n\n/**\n * Public handler for touch/mouse start events\n * Enhanced to support nested carousels\n */\nexport const handleTouchStart = (\n  event: MouseEvent | TouchEvent,\n  id: string,\n  options: {stopPropagation?: boolean} = {}\n): void => {\n  // Prevent default behavior\n  event.preventDefault()\n\n  // Stop propagation if requested (needed for nested carousels)\n  if (options.stopPropagation) {\n    event.stopPropagation()\n  }\n\n  // Call the touch start event with event info and carousel ID\n  cyre.call(TOUCH_EVENTS.TOUCH_START, {event, id, options})\n}\n\n/**\n * Special touch start handler for nested carousels\n * Always stops propagation\n */\nexport const handleNestedTouchStart = (\n  event: MouseEvent | TouchEvent,\n  id: string\n): void => {\n  event.stopPropagation()\n  handleTouchStart(event, id, {stopPropagation: true})\n}\n\n/**\n * Calculates swipe speed from distance and time\n */\nconst calculateSwipeSpeed = (distance: number, timeElapsed: number): number => {\n  return distance / (timeElapsed || 1)\n}\n\n/**\n * Determines if interaction was a click based on time elapsed\n */\nconst isClickEvent = (timeElapsed: number): boolean => {\n  return timeElapsed < 300\n}\n\n/**\n * Add CSS for touch interactions\n */\nexport const injectTouchStyles = (): void => {\n  if (document.getElementById('holo-touch-styles')) return\n\n  const style = document.createElement('style')\n  style.id = 'holo-touch-styles'\n\n  style.textContent = `\n    /* Base touch styles */\n    .holo-touch-active {\n      cursor: grabbing !important;\n    }\n    \n    /* Nested carousel touch styles */\n    .holo-carousel[data-nested=\"true\"] {\n      touch-action: none;\n      z-index: 2;\n    }\n    \n    /* Parent carousel with active child */\n    .holo-carousel[data-child-active=\"true\"] {\n      pointer-events: none;\n    }\n    \n    .holo-carousel[data-child-active=\"true\"] .holo-container {\n      transition: none !important;\n    }\n    \n    /* But allow child events */\n    .holo-carousel[data-child-active=\"true\"] [data-nested=\"true\"] {\n      pointer-events: auto;\n    }\n  `\n\n  document.head.appendChild(style)\n}\n\n// Inject touch styles on init\ninjectTouchStyles()\n","//src/components/holo-deep-linking.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport {_holo} from '../libs/holo-essentials'\nimport {_holoRelationships, getAncestors, getChildren} from './holo-relations'\nimport {goToSlide} from '../libs/holo-navigation'\nimport {DEFAULT_DEEP_LINKING_OPTIONS, EVENTS} from '../config/holo-config'\nimport {DeepLinkingOptions} from '~/types/interface'\n\n/**\n * Store for deep linking options per carousel\n */\nconst _deepLinkingOptions: Record<string, DeepLinkingOptions> = {}\n\n/**\n * Initialize deep linking for a carousel\n */\nexport const initializeDeepLinking = (\n  id: string,\n  options: Partial<DeepLinkingOptions> = {}\n): void => {\n  // Store options with defaults\n  _deepLinkingOptions[id] = {\n    ...DEFAULT_DEEP_LINKING_OPTIONS,\n    ...options\n  }\n\n  // Parse hash on initialization and go to correct slide if needed\n  applyHashNavigation()\n\n  // Only set up global listeners once\n  if (!window._holoDeepLinkingInitialized) {\n    // Listen for hash changes\n    window.addEventListener('hashchange', applyHashNavigation)\n\n    // Mark as initialized\n    window._holoDeepLinkingInitialized = true\n  }\n\n  // Register event handler for slide changes\n  cyre.on(`${id}_slide_changed`, (slideIndex: number) => {\n    updateUrlHash(id, slideIndex)\n  })\n\n  // Configure action with throttling\n  cyre.action({\n    id: `${id}_slide_changed`,\n    throttle: 200\n  })\n\n  // Listen for transform complete events to update URL\n  cyre.on(\n    EVENTS.TRANSFORM_COMPLETE,\n    (payload: {id: string; position: number}) => {\n      if (payload.id === id) {\n        // Emit slide changed event\n        cyre.call(`${id}_slide_changed`, payload.position)\n      }\n    }\n  )\n}\n\n/**\n * Parse the current URL hash and apply navigation\n */\nexport const applyHashNavigation = (): void => {\n  const hash = window.location.hash.substring(1)\n  if (!hash) return\n\n  const params = new URLSearchParams(hash)\n\n  // Check all carousels\n  Object.keys(_deepLinkingOptions).forEach(id => {\n    const options = _deepLinkingOptions[id]\n    if (!options.enabled) return\n\n    const virtual = _holo[id]?.getVirtual\n    if (!virtual) return\n\n    // Check for this carousel's parameter\n    const paramName = `${options.paramPrefix}-${id}`\n    if (params.has(paramName)) {\n      const value = params.get(paramName)\n\n      // Parse the value - may include nested carousel info\n      const parts = value.split(options.nestedSeparator)\n\n      // Navigate to main carousel slide\n      const slideIndex = parseInt(parts[0], 10)\n      if (!isNaN(slideIndex)) {\n        goToSlide(virtual, slideIndex)\n\n        // Scroll to carousel if enabled\n        if (options.scrollToCarousel) {\n          setTimeout(() => {\n            const element = document.getElementById(id)\n            if (element) {\n              element.scrollIntoView({behavior: 'smooth', block: 'nearest'})\n            }\n          }, 100)\n        }\n\n        // Process nested carousel parts\n        if (parts.length > 1 && _holoRelationships[id]) {\n          processNestedNavigation(id, parts.slice(1))\n        }\n      }\n    }\n  })\n}\n\n/**\n * Process navigation for nested carousels\n */\nconst processNestedNavigation = (\n  parentId: string,\n  pathParts: string[]\n): void => {\n  if (!_holoRelationships[parentId] || pathParts.length === 0) return\n\n  // Get child carousels\n  const childIds = getChildren(parentId)\n  if (childIds.length === 0) return\n\n  // Find child carousel based on its index within the parent\n  const childIndex = parseInt(pathParts[0].split(':')[0], 10)\n  if (isNaN(childIndex) || childIndex >= childIds.length) return\n\n  const childId = childIds[childIndex]\n  const slideIndex = parseInt(pathParts[0].split(':')[1], 10)\n\n  // Navigate to child slide\n  const childVirtual = _holo[childId]?.getVirtual\n  if (childVirtual && !isNaN(slideIndex)) {\n    // Small delay to ensure parent has finished its navigation\n    setTimeout(() => {\n      goToSlide(childVirtual, slideIndex)\n\n      // Process further nesting\n      if (pathParts.length > 1) {\n        processNestedNavigation(childId, pathParts.slice(1))\n      }\n    }, 100)\n  }\n}\n\n/**\n * Update URL hash based on carousel state\n */\nexport const updateUrlHash = (id: string, slideIndex: number): void => {\n  const options = _deepLinkingOptions[id]\n  if (!options?.enabled || !options.updateHistory) return\n\n  // Get current hash parameters\n  const hash = window.location.hash.substring(1)\n  const params = new URLSearchParams(hash)\n\n  // Parameter name for this carousel\n  const paramName = `${options.paramPrefix}-${id}`\n\n  // Update this carousel's parameter\n  const nestedPath = buildNestedPath(id, slideIndex)\n  params.set(paramName, nestedPath)\n\n  // Update URL without reloading page\n  const newHash = `#${params.toString()}`\n\n  if (window.location.hash !== newHash) {\n    if (options.updateHistory) {\n      window.history.pushState(null, '', newHash)\n    } else {\n      window.location.hash = newHash\n    }\n  }\n}\n\n/**\n * Build a path string including nested carousel states\n */\nconst buildNestedPath = (id: string, slideIndex: number): string => {\n  const options = _deepLinkingOptions[id]\n  let path = `${slideIndex}`\n\n  // Check if this carousel has active children\n  if (_holoRelationships[id]?.childIds?.length > 0) {\n    // Get children that are currently visible\n    const childIds = getChildren(id)\n    const visibleChildren = childIds.filter(childId => {\n      // A child is considered visible if it's in the current slide\n      const childElement = document.getElementById(childId)\n      if (!childElement) return false\n\n      // Check if child is in a currently visible slide\n      const parentSlides = Array.from(document.querySelectorAll(`#${id} .holo`))\n      const slideElement = parentSlides[slideIndex]\n\n      return slideElement && slideElement.contains(childElement)\n    })\n\n    // Add visible children to path\n    visibleChildren.forEach(childId => {\n      const childIndex = childIds.indexOf(childId)\n      const childVirtual = _holo[childId]?.getVirtual\n\n      if (childVirtual) {\n        const childSlideIndex = getCurrentSlideIndex(childVirtual)\n        const childPath = buildNestedPath(childId, childSlideIndex)\n\n        path += `${options.nestedSeparator}${childIndex}:${childPath}`\n      }\n    })\n  }\n\n  return path\n}\n\n/**\n * Get current slide index for a carousel\n */\nconst getCurrentSlideIndex = (virtual: HoloVirtual): number => {\n  // Calculate based on transform position and item width/height\n  const slideDimension = virtual.io.orientation\n    ? virtual.item.height || 1\n    : virtual.item.width || 1\n\n  const position = virtual.io.orientation\n    ? Math.abs(virtual.transformY)\n    : Math.abs(virtual.transformX)\n\n  return Math.round(position / slideDimension)\n}\n\n/**\n * Public API for manually navigating via deep link\n */\nexport const navigateToDeepLink = (path: string): void => {\n  // Set hash and let the hashchange handler do the work\n  window.location.hash = path\n}\n\n/**\n * Public API for generating a deep link for a specific carousel state\n */\nexport const getDeepLinkPath = (id: string): string => {\n  const virtual = _holo[id]?.getVirtual\n  if (!virtual) return ''\n\n  const slideIndex = getCurrentSlideIndex(virtual)\n  return buildNestedPath(id, slideIndex)\n}\n\n/**\n * Enable deep linking for a carousel\n */\nexport const enableDeepLinking = (\n  id: string,\n  options: Partial<DeepLinkingOptions> = {}\n): void => {\n  initializeDeepLinking(id, {\n    ...DEFAULT_DEEP_LINKING_OPTIONS,\n    ...options,\n    enabled: true\n  })\n}\n\n/**\n * Disable deep linking for a carousel\n */\nexport const disableDeepLinking = (id: string): void => {\n  if (_deepLinkingOptions[id]) {\n    _deepLinkingOptions[id].enabled = false\n  }\n}\n\n// Add to window for TypeScript\ndeclare global {\n  interface Window {\n    _holoDeepLinkingInitialized?: boolean\n  }\n}\n","//src/components/holo-accordion.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloVirtual, HoloShadow} from '../types/interface'\nimport {_holo} from '../libs/holo-essentials'\nimport {EVENTS} from '../config/holo-config'\n\n/**\n * Accordion-specific options\n */\nexport interface AccordionOptions {\n  mode: number // 0 = disabled, 1 = enabled\n  expand: number // 0 = single panel, 1 = multiple panels can be open\n  defaultOpen: number // Index of default open panel (-1 for all closed)\n  animation: number // 0 = snap, 1 = smooth animation\n  headerHeight: number // Height of header in pixels (for vertical)\n  headerWidth: number // Width of header in pixels (for horizontal)\n}\n\n/**\n * Default accordion options\n */\nexport const DEFAULT_ACCORDION_OPTIONS: AccordionOptions = {\n  mode: 0,\n  expand: 0,\n  defaultOpen: 0,\n  animation: 1,\n  headerHeight: 48,\n  headerWidth: 48\n}\n\n/**\n * Initialize accordion mode for a carousel\n * @param virtual Virtual state\n * @param shadow Shadow DOM elements\n */\nexport const initializeAccordionMode = (\n  virtual: HoloVirtual,\n  shadow: HoloShadow\n): void => {\n  if (!virtual.io.accordionMode) return\n\n  CyreLog.info(`Initializing accordion mode for ${virtual.id}`)\n\n  // Get all panels\n  const panels = Array.from(shadow.container.children) as HTMLElement[]\n\n  if (panels.length === 0) {\n    CyreLog.warn(`No panels found in accordion ${virtual.id}`)\n    return\n  }\n\n  // Measure max dimensions for each panel and get collapse dimensions\n  const panelDimensions = panels.map(panel => {\n    // Store original styles\n    const originalStyle = panel.style.cssText\n\n    // Temporarily set panel to \"expanded\" for measurement\n    panel.style.height = 'auto'\n    panel.style.width = 'auto'\n    panel.style.display = 'block'\n    panel.style.overflow = 'visible'\n\n    // Force reflow\n    void panel.offsetHeight\n\n    // Measure\n    const expandedDimensions = {\n      width: panel.offsetWidth,\n      height: panel.offsetHeight\n    }\n\n    // Restore original style\n    panel.style.cssText = originalStyle\n\n    return expandedDimensions\n  })\n\n  // Determine collapsed dimensions based on orientation\n  const isVertical = !!virtual.io.orientation\n  const collapsedHeight = isVertical\n    ? virtual.accordionOptions?.headerHeight || 48\n    : panelDimensions[0].height\n  const collapsedWidth = isVertical\n    ? panelDimensions[0].width\n    : virtual.accordionOptions?.headerWidth || 48\n\n  // Find max dimensions\n  const maxHeight = Math.max(...panelDimensions.map(d => d.height))\n  const maxWidth = Math.max(...panelDimensions.map(d => d.width))\n\n  // Set initial accordion state\n  const defaultOpen =\n    virtual.accordionOptions?.defaultOpen >= 0 &&\n    virtual.accordionOptions.defaultOpen < panels.length\n      ? [virtual.accordionOptions.defaultOpen]\n      : []\n\n  // Update virtual state with accordion info\n  _holo[virtual.id].setState = {\n    ...virtual,\n    accordionState: {\n      openPanels: defaultOpen,\n      previouslyOpen: [],\n      expandedHeight: maxHeight,\n      expandedWidth: maxWidth,\n      collapsedHeight,\n      collapsedWidth\n    }\n  }\n\n  // Apply initial state to panels\n  applyAccordionState(virtual.id)\n\n  // Set up event listeners for panel headers\n  setupAccordionEvents(virtual.id, panels)\n}\n\n/**\n * Set up click events for accordion panels\n */\nconst setupAccordionEvents = (id: string, panels: HTMLElement[]): void => {\n  panels.forEach((panel, index) => {\n    // Find or create header element\n    let header = panel.querySelector('.accordion-header') as HTMLElement\n\n    if (!header) {\n      // Create a header if none exists\n      header = document.createElement('div')\n      header.className = 'accordion-header'\n\n      // Find and use panel title if available\n      const title = panel.querySelector('h1, h2, h3, h4, h5, h6')\n      if (title) {\n        header.innerHTML = title.outerHTML\n        title.remove() // Remove original title\n      } else {\n        header.textContent = `Panel ${index + 1}`\n      }\n\n      // Insert header at beginning of panel\n      if (panel.firstChild) {\n        panel.insertBefore(header, panel.firstChild)\n      } else {\n        panel.appendChild(header)\n      }\n    }\n\n    // Create content wrapper if needed\n    let content = panel.querySelector('.accordion-content') as HTMLElement\n    if (!content) {\n      content = document.createElement('div')\n      content.className = 'accordion-content'\n\n      // Move all elements except header into content\n      Array.from(panel.children).forEach(child => {\n        if (\n          child !== header &&\n          !child.classList.contains('accordion-content')\n        ) {\n          content.appendChild(child)\n        }\n      })\n\n      panel.appendChild(content)\n    }\n\n    // Add click handler to header\n    header.addEventListener('click', e => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      toggleAccordionPanel(id, index)\n    })\n  })\n}\n\n/**\n * Toggle an accordion panel open/closed\n */\nexport const toggleAccordionPanel = (id: string, panelIndex: number): void => {\n  const virtual = _holo[id]?.getVirtual\n\n  if (!virtual || !virtual.accordionState) {\n    CyreLog.error(`Invalid accordion state for ${id}`)\n    return\n  }\n\n  // Store current state for transition reference\n  const previouslyOpen = [...virtual.accordionState.openPanels]\n\n  // Determine new state\n  let openPanels: number[]\n\n  if (virtual.accordionState.openPanels.includes(panelIndex)) {\n    // Close this panel\n    openPanels = virtual.accordionState.openPanels.filter(\n      idx => idx !== panelIndex\n    )\n  } else {\n    if (virtual.accordionOptions?.expand) {\n      // Multiple panels can be open - add this one\n      openPanels = [...virtual.accordionState.openPanels, panelIndex]\n    } else {\n      // Single panel mode - replace with just this one\n      openPanels = [panelIndex]\n    }\n  }\n\n  // Update state\n  _holo[id].setState = {\n    ...virtual,\n    accordionState: {\n      ...virtual.accordionState,\n      openPanels,\n      previouslyOpen\n    }\n  }\n\n  // Apply the new state\n  applyAccordionState(id)\n}\n\n/**\n * Apply accordion state to the DOM elements\n */\nconst applyAccordionState = (id: string): void => {\n  const virtual = _holo[id]?.getVirtual\n  const shadow = _holo[id]?.getShadow\n\n  if (!virtual || !shadow || !virtual.accordionState) {\n    CyreLog.error(`Cannot apply accordion state for ${id}`)\n    return\n  }\n\n  const panels = Array.from(shadow.container.children) as HTMLElement[]\n  const openPanels = virtual.accordionState.openPanels\n  const isVertical = !!virtual.io.orientation\n\n  // Process each panel\n  panels.forEach((panel, index) => {\n    const isOpen = openPanels.includes(index)\n    const header = panel.querySelector('.accordion-header') as HTMLElement\n    const content = panel.querySelector('.accordion-content') as HTMLElement\n\n    // Update panel classes\n    panel.classList.toggle('accordion-open', isOpen)\n    panel.classList.toggle('accordion-closed', !isOpen)\n\n    if (header) {\n      header.classList.toggle('accordion-header-open', isOpen)\n      header.classList.toggle('accordion-header-closed', !isOpen)\n    }\n\n    if (content) {\n      content.classList.toggle('accordion-content-open', isOpen)\n      content.classList.toggle('accordion-content-closed', !isOpen)\n\n      // Apply dimensions based on state and orientation\n      if (isVertical) {\n        // Vertical accordion\n        content.style.height = isOpen\n          ? `${virtual.accordionState.expandedHeight}px`\n          : '0'\n        content.style.overflow = isOpen ? 'visible' : 'hidden'\n      } else {\n        // Horizontal accordion\n        content.style.width = isOpen\n          ? `${virtual.accordionState.expandedWidth}px`\n          : '0'\n        content.style.overflow = isOpen ? 'visible' : 'hidden'\n      }\n\n      // Apply transition if animation is enabled\n      if (virtual.accordionOptions?.animation) {\n        content.style.transition = isVertical\n          ? `height ${virtual.duration}ms ${virtual.transitionTiming}`\n          : `width ${virtual.duration}ms ${virtual.transitionTiming}`\n      } else {\n        content.style.transition = 'none'\n      }\n    }\n  })\n\n  // Update overall container dimensions if needed\n  calculateAccordionDimensions(id)\n}\n\n/**\n * Calculate and apply overall accordion dimensions based on open panels\n */\nconst calculateAccordionDimensions = (id: string): void => {\n  const virtual = _holo[id]?.getVirtual\n  const shadow = _holo[id]?.getShadow\n\n  if (!virtual || !shadow || !virtual.accordionState) return\n\n  const isVertical = !!virtual.io.orientation\n  const panels = Array.from(shadow.container.children) as HTMLElement[]\n  const openPanels = virtual.accordionState.openPanels\n\n  if (isVertical) {\n    // For vertical accordion, calculate total height\n    let totalHeight = 0\n\n    panels.forEach((panel, index) => {\n      // Add header height\n      totalHeight += virtual.accordionState?.collapsedHeight || 0\n\n      // If panel is open, add content height\n      if (openPanels.includes(index)) {\n        totalHeight += virtual.accordionState?.expandedHeight || 0\n      }\n    })\n\n    // Apply to container\n    shadow.container.style.height = `${totalHeight}px`\n  } else {\n    // For horizontal accordion, calculate total width\n    let totalWidth = 0\n\n    panels.forEach((panel, index) => {\n      // Add header width\n      totalWidth += virtual.accordionState?.collapsedWidth || 0\n\n      // If panel is open, add content width\n      if (openPanels.includes(index)) {\n        totalWidth += virtual.accordionState?.expandedWidth || 0\n      }\n    })\n\n    // Apply to container\n    shadow.container.style.width = `${totalWidth}px`\n  }\n}\n\n/**\n * Apply accordion-specific CSS\n */\nexport const injectAccordionStyles = (): void => {\n  if (document.getElementById('holo-accordion-styles')) return\n\n  const style = document.createElement('style')\n  style.id = 'holo-accordion-styles'\n\n  style.textContent = `\n    /* Base accordion styles */\n    .holo-carousel[data-mode=\"accordion\"] {\n      overflow: visible;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"] .holo-container {\n      display: flex;\n      flex-direction: column;\n      transform: none !important; /* Override carousel transform */\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .holo-container {\n      flex-direction: row;\n    }\n    \n    /* Panel styles */\n    .holo-carousel[data-mode=\"accordion\"] .holo {\n      transition: all 0.3s ease;\n      overflow: hidden;\n      flex-shrink: 0;\n      position: relative;\n    }\n    \n    /* Header styles */\n    .holo-carousel[data-mode=\"accordion\"] .accordion-header {\n      cursor: pointer;\n      padding: 12px 15px;\n      background: rgba(0, 0, 0, 0.03);\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n      user-select: none;\n      display: flex;\n      align-items: center;\n      position: relative;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"] .accordion-header::after {\n      content: \"▼\";\n      font-size: 0.8em;\n      margin-left: auto;\n      transition: transform 0.3s ease;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"] .accordion-header-closed::after {\n      transform: rotate(-90deg);\n    }\n    \n    /* Content styles */\n    .holo-carousel[data-mode=\"accordion\"] .accordion-content {\n      transition: height 0.3s ease, width 0.3s ease;\n      overflow: hidden;\n    }\n    \n    /* Vertical specific */\n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"vertical\"] .accordion-content {\n      width: 100%;\n    }\n    \n    /* Horizontal specific */\n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .holo {\n      height: 100%;\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .accordion-header {\n      writing-mode: vertical-rl;\n      transform: rotate(180deg);\n      height: 100%;\n      width: auto;\n      border-right: 1px solid rgba(0, 0, 0, 0.1);\n      border-bottom: none;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .accordion-header::after {\n      transform: rotate(90deg);\n      margin-top: 10px;\n      margin-left: 0;\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .accordion-header-closed::after {\n      transform: rotate(0deg);\n    }\n    \n    .holo-carousel[data-mode=\"accordion\"][data-orientation=\"horizontal\"] .accordion-content {\n      height: 100%;\n    }\n  `\n\n  document.head.appendChild(style)\n}\n\n/**\n * Convert a carousel to accordion mode\n */\nexport const convertToAccordion = (\n  id: string,\n  options: Partial<AccordionOptions> = {}\n): void => {\n  const virtual = _holo[id]?.getVirtual\n  const shadow = _holo[id]?.getShadow\n\n  if (!virtual || !shadow) {\n    CyreLog.error(`Cannot convert carousel ${id} to accordion: not found`)\n    return\n  }\n\n  // Ensure accordion styles are injected\n  injectAccordionStyles()\n\n  // Merge with default options\n  const accordionOptions = {\n    ...DEFAULT_ACCORDION_OPTIONS,\n    ...options,\n    mode: 1 // Enable accordion mode\n  }\n\n  // Update options with accordion-specific settings\n  _holo[id].setState = {\n    ...virtual,\n    io: {\n      ...virtual.io,\n      accordionMode: 1\n    },\n    accordionOptions\n  }\n\n  // Apply data attributes for styling\n  shadow.carousel.setAttribute('data-mode', 'accordion')\n  shadow.carousel.setAttribute(\n    'data-orientation',\n    options.mode !== undefined\n      ? options.mode\n        ? 'vertical'\n        : 'horizontal'\n      : virtual.io.orientation\n      ? 'vertical'\n      : 'horizontal'\n  )\n\n  // Initialize accordion mode\n  initializeAccordionMode(_holo[id].getVirtual, shadow)\n}\n\n/**\n * Public API for toggling accordion panels\n */\nexport const toggleAccordion = (id: string, panelIndex: number): void => {\n  toggleAccordionPanel(id, panelIndex)\n}\n\n/**\n * Public API for opening an accordion panel\n */\nexport const openAccordionPanel = (id: string, panelIndex: number): void => {\n  const virtual = _holo[id]?.getVirtual\n\n  if (!virtual || !virtual.accordionState) {\n    CyreLog.error(`Invalid accordion state for ${id}`)\n    return\n  }\n\n  // If not already open, toggle it\n  if (!virtual.accordionState.openPanels.includes(panelIndex)) {\n    toggleAccordionPanel(id, panelIndex)\n  }\n}\n\n/**\n * Public API for closing an accordion panel\n */\nexport const closeAccordionPanel = (id: string, panelIndex: number): void => {\n  const virtual = _holo[id]?.getVirtual\n\n  if (!virtual || !virtual.accordionState) {\n    CyreLog.error(`Invalid accordion state for ${id}`)\n    return\n  }\n\n  // If already open, toggle it\n  if (virtual.accordionState.openPanels.includes(panelIndex)) {\n    toggleAccordionPanel(id, panelIndex)\n  }\n}\n\n/**\n * Convert back from accordion to normal carousel\n */\nexport const convertToCarousel = (id: string): void => {\n  const virtual = _holo[id]?.getVirtual\n  const shadow = _holo[id]?.getShadow\n\n  if (!virtual || !shadow) {\n    CyreLog.error(`Cannot convert accordion ${id} to carousel: not found`)\n    return\n  }\n\n  // Update accordion mode setting\n  _holo[id].setState = {\n    ...virtual,\n    io: {\n      ...virtual.io,\n      accordionMode: 0\n    },\n    // Remove accordion state\n    accordionState: undefined,\n    accordionOptions: undefined\n  }\n\n  // Remove data attributes\n  shadow.carousel.removeAttribute('data-mode')\n  shadow.carousel.removeAttribute('data-orientation')\n\n  // Reset container styles\n  shadow.container.style.height = ''\n  shadow.container.style.width = ''\n\n  // Reset panel styles\n  const panels = Array.from(shadow.container.children) as HTMLElement[]\n\n  panels.forEach(panel => {\n    panel.classList.remove('accordion-open', 'accordion-closed')\n\n    // Reset content styles\n    const content = panel.querySelector('.accordion-content') as HTMLElement\n    if (content) {\n      content.style.height = ''\n      content.style.width = ''\n      content.style.overflow = ''\n      content.style.transition = ''\n\n      // Move content back to panel directly\n      Array.from(content.children).forEach(child => {\n        panel.appendChild(child)\n      })\n\n      // Remove content wrapper\n      content.remove()\n    }\n\n    // Remove header if it was auto-created\n    const header = panel.querySelector('.accordion-header') as HTMLElement\n    if (header) {\n      header.remove()\n    }\n  })\n\n  // Refresh the carousel\n  cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[id].getState)\n}\n","//src/components/holo-io-manager.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloVirtual, HoloShadow} from '../types/interface'\nimport {handleTouchStart, handleNestedTouchStart} from './holo-touch'\nimport {handleWheel} from '../libs/holo-navigation'\nimport {initializeInstanceEvents} from '../core/holo-events'\nimport {EVENTS} from '../config/holo-config'\nimport {isChildOf} from './holo-relations'\nimport {initializeDeepLinking} from './holo-deep-link'\nimport {initializeAccordionMode} from './holo-accordion'\n\n/**\n * H.O.L.O - C.A.R.O.U.S.E.L\n * IO manager\n * Setup input/output event handling for a carousel instance\n */\nexport const setupIOManager = (\n  virtual: HoloVirtual,\n  shadow: HoloShadow\n): void => {\n  if (!virtual) {\n    CyreLog.error('@Holo: Major malfunctions - Virtual state is missing')\n    return\n  }\n\n  if (!virtual.id || typeof virtual.id !== 'string') {\n    CyreLog.error('@Holo: Virtual state has no valid ID', virtual)\n    return\n  }\n\n  // Initialize instance-specific events using the enhanced event system\n  try {\n    initializeInstanceEvents(virtual.id, virtual.io)\n  } catch (error) {\n    CyreLog.error(\n      `Error initializing events for carousel ${virtual.id}:`,\n      error\n    )\n  }\n\n  // Initialize accordion mode if enabled\n  if (virtual.io.accordionMode) {\n    initializeAccordionMode(virtual, shadow)\n  }\n\n  // Initialize deep linking if enabled\n  if (virtual.io.deepLinking) {\n    initializeDeepLinking(virtual.id)\n  }\n\n  // Setup DOM event handlers if enabled\n  if (virtual.io.enabled) {\n    setupDomEventHandlers(virtual, shadow)\n  }\n\n  // Initial refresh\n  cyre.call(EVENTS.REFRESH_CAROUSEL, {virtual, shadow})\n}\n\n/**\n * Setup DOM event handlers for user interaction\n */\nconst setupDomEventHandlers = (\n  virtual: HoloVirtual,\n  shadow: HoloShadow\n): void => {\n  if (!virtual.id || !shadow || !shadow.carousel || !shadow.container) {\n    CyreLog.error(\n      `Cannot setup DOM handlers for carousel ${virtual?.id}: Invalid shadow elements`\n    )\n    return\n  }\n\n  CyreLog.info(`Setting up DOM handlers for carousel ${virtual.id}`)\n\n  // Get event IDs from virtual\n  const eventIds = virtual.eventIds || {}\n\n  // Determine if this is a nested carousel\n  const isNested = virtual.nestedLevel > 0 || !!virtual.parentId\n\n  // Add data attribute for nested carousels\n  if (isNested) {\n    shadow.carousel.setAttribute('data-nested', 'true')\n\n    if (virtual.parentId) {\n      shadow.carousel.setAttribute('data-parent', virtual.parentId)\n    }\n  }\n\n  // Mouse drag handler\n  if (virtual.io.drag) {\n    // Use different touch handlers based on nesting\n    const handleMouseDown = (e: MouseEvent): void => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (isNested) {\n        handleNestedTouchStart(e, virtual.id)\n      } else {\n        handleTouchStart(e, virtual.id)\n      }\n\n      // Log for debugging\n      CyreLog.debug(`Mouse down detected on carousel ${virtual.id}`)\n    }\n\n    shadow.container.addEventListener('mousedown', handleMouseDown, {\n      passive: false\n    })\n\n    // Add click handlers to individual slides\n    const slideElements = shadow.container.querySelectorAll('.holo')\n    slideElements.forEach((slide, index) => {\n      slide.addEventListener(\n        'click',\n        e => {\n          // If this is an accordion, don't handle here\n          if (virtual.io.accordionMode) return\n\n          // Otherwise process normally\n          e.preventDefault()\n          e.stopPropagation()\n\n          CyreLog.debug(`Slide ${index} clicked in carousel ${virtual.id}`)\n\n          if (eventIds.activate) {\n            cyre.call(eventIds.activate, [slide as HTMLElement, virtual])\n          }\n        },\n        {passive: false}\n      )\n    })\n  }\n\n  // Touch drag handler\n  if (virtual.io.drag) {\n    // Use different touch handlers based on nesting\n    const touchStartHandler = (e: TouchEvent): void => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (isNested) {\n        handleNestedTouchStart(e, virtual.id)\n      } else {\n        handleTouchStart(e, virtual.id)\n      }\n\n      // Log for debugging\n      CyreLog.debug(`Touch start detected on carousel ${virtual.id}`)\n    }\n\n    shadow.container.addEventListener('touchstart', touchStartHandler, {\n      passive: false\n    })\n  }\n\n  // Mouse wheel handler - only for non-nested carousels\n  if (virtual.io.wheel && !isNested) {\n    const wheelHandler = (e: WheelEvent): void => {\n      e.preventDefault()\n      e.stopPropagation()\n      handleWheel(e, virtual.id)\n\n      // Log for debugging\n      CyreLog.debug(`Wheel event detected on carousel ${virtual.id}`)\n    }\n\n    shadow.carousel.addEventListener('wheel', wheelHandler, {passive: false})\n  }\n\n  // Navigation buttons\n  const prevButton = shadow.carousel.querySelector('.holo-prev')\n  const nextButton = shadow.carousel.querySelector('.holo-next')\n\n  if (prevButton) {\n    prevButton.addEventListener('click', e => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (eventIds.prevSlide) {\n        cyre.call(eventIds.prevSlide, virtual)\n      }\n    })\n  }\n\n  if (nextButton) {\n    nextButton.addEventListener('click', e => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (eventIds.nextSlide) {\n        cyre.call(eventIds.nextSlide, virtual)\n      }\n    })\n  }\n\n  // Animation handler - start animation if enabled\n  if (virtual.io.animate && eventIds.animate) {\n    cyre.call(eventIds.animate, virtual)\n  }\n\n  // Resize handler\n  const handleResize = (): void => {\n    cyre.call(EVENTS.REFRESH_CAROUSEL, {virtual, shadow})\n  }\n\n  // Add resize listener to window\n  window.addEventListener('resize', handleResize, {passive: true})\n\n  // Also refresh on orientation change\n  window.addEventListener('orientationchange', handleResize, {passive: true})\n}\n\nexport default setupIOManager\n","// src/core/holo-state.ts\n\nimport {cyre} from 'cyre'\nimport type {\n  HoloVirtual,\n  HoloShadow,\n  HoloInstance,\n  HoloIOOptions\n} from '../types/interface'\nimport {DEFAULT_IO_OPTIONS, ANIMATION, EVENTS} from '../config/holo-config'\nimport {createEventIds} from '../core/holo-events'\n\n/**\n * Create default virtual state with immutable pattern\n */\nexport const createDefaultVirtual = (id: string = ''): HoloVirtual => {\n  return {\n    id,\n    carousel: {},\n    container: {},\n    io: createDefaultIOOptions(id),\n    title: null,\n    description: null,\n    duration: ANIMATION.DURATION,\n    transitionTiming: ANIMATION.TIMING,\n    transformX: 0,\n    transformY: 0,\n    transformZ: 0,\n    numberOfSlots: 0,\n    endOfSlide: 0,\n    endOfSlidePosition: 0,\n    item: {\n      max: 8,\n      width: 0,\n      height: 0,\n      min: 1\n    },\n    noOfChildren: 0,\n    startNumber: 0,\n    // Add consistent event IDs\n    eventIds: createEventIds(id)\n  }\n}\n\n/**\n * Create default IO options\n */\nexport const createDefaultIOOptions = (id: string = ''): HoloIOOptions => {\n  return {\n    ...DEFAULT_IO_OPTIONS,\n    id\n  }\n}\n\n/**\n * Create default shadow state\n */\nexport const createDefaultShadow = (): HoloShadow => {\n  return {\n    carousel: {} as HTMLElement,\n    container: {} as HTMLElement\n  }\n}\n\n/**\n * Create an enhanced Holo instance with improved state management\n */\nexport const createHoloInstance = (\n  slide: HTMLElement,\n  io: Partial<HoloIOOptions> = {}\n): HoloInstance => {\n  // Ensure valid ID\n  const id = slide.id || `holo-${Date.now()}`\n  slide.id = id // Apply ID to element if it didn't have one\n\n  // Find container or create one if missing\n  const container = slide.getElementsByClassName(\n    'holo-container'\n  )[0] as HTMLElement\n\n  if (!container) {\n    console.error('@Holo: holo-container not found in:', id)\n    throw new Error('Missing holo-container element')\n  }\n\n  // Create shadow DOM references\n  const shadow: HoloShadow = {\n    carousel: slide,\n    container\n  }\n\n  // Create initial virtual state\n  const virtual = createDefaultVirtual(id)\n\n  // Apply custom IO options\n  virtual.io = {\n    ...virtual.io,\n    ...io,\n    id\n  }\n\n  // Get initial dimensions\n  const carouselWidth = shadow.carousel.clientWidth || 0\n  const carouselHeight = shadow.carousel.clientHeight || 0\n  const containerWidth = shadow.container.clientWidth || 0\n  const containerHeight = shadow.container.clientHeight || 0\n  const childrenCount = shadow.container.children.length || 0\n\n  // Initialize virtual state with dimensions\n  const initializedVirtual = {\n    ...virtual,\n    carousel: {\n      width: carouselWidth,\n      height: carouselHeight\n    },\n    container: {\n      width: containerWidth,\n      height: containerHeight\n    },\n    noOfChildren: childrenCount,\n    startNumber: 0,\n    // Calculate end position based on orientation\n    endOfSlidePosition: virtual.io.orientation\n      ? -Math.max(0, containerHeight - carouselHeight)\n      : -Math.max(0, containerWidth - carouselWidth)\n  }\n\n  // Register subscriber for state changes (prevent \"no subscriber\" error)\n  const stateUpdatedId = `state_updated_${id}`\n\n  // Add a simple subscriber to prevent no-subscriber errors\n  cyre.on(stateUpdatedId, state => {\n    // Do nothing - just a placeholder to avoid console errors\n    return undefined\n  })\n\n  // Register action with throttling and change detection\n  cyre.action({\n    id: stateUpdatedId,\n    throttle: 16, // ~60fps\n    detectChanges: true // Only process if actual changes\n  })\n\n  // Create the interface for the instance with pure functions\n  const instance: HoloInstance = {\n    virtual: initializedVirtual,\n    shadow,\n\n    // Getters - Return immutable copies\n    get getVirtual(): HoloVirtual {\n      return {...this.virtual}\n    },\n\n    get getShadow(): HoloShadow {\n      return this.shadow\n    },\n\n    get getState() {\n      return {\n        virtual: this.getVirtual,\n        shadow: this.getShadow\n      }\n    },\n\n    get getDimensions() {\n      return {\n        car: {\n          w: this.shadow.carousel.clientWidth || 0,\n          h: this.shadow.carousel.clientHeight || 0\n        },\n        con: {\n          w: this.shadow.container.clientWidth || 0,\n          h: this.shadow.container.clientHeight || 0,\n          x: this.virtual.transformX,\n          y: this.virtual.transformY,\n          z: this.virtual.transformZ\n        }\n      }\n    },\n\n    // Setters - Update state and DOM with side effects\n    set setState(updatedVirtual: HoloVirtual) {\n      if (!updatedVirtual) return\n\n      // Update virtual state immutably\n      this.virtual = {...this.virtual, ...updatedVirtual}\n\n      // Update DOM with side effect\n      this.updateDOMTransform()\n\n      // Notify about state update\n      cyre.call(`state_updated_${id}`, this.virtual)\n    },\n\n    set setDimension(updatedVirtual: HoloVirtual) {\n      if (!updatedVirtual) return\n\n      // Update virtual state immutably\n      this.virtual = {...this.virtual, ...updatedVirtual}\n\n      // Update DOM dimensions with side effect\n      this.updateDOMDimensions()\n    },\n\n    set updateStyle(on: number) {\n      // Update transition style based on flag\n      this.updateTransitionStyle(on === 1)\n    },\n\n    // Helper methods to update DOM\n    updateDOMTransform() {\n      if (!this.shadow.container) return\n\n      // Apply transform to container\n      this.shadow.container.style.transform = `translate3d(${this.virtual.transformX}px, ${this.virtual.transformY}px, ${this.virtual.transformZ}px)`\n    },\n\n    updateDOMDimensions() {\n      if (!this.shadow.carousel) return\n\n      // Apply dimensions based on orientation\n      if (this.virtual.io.orientation) {\n        this.shadow.carousel.style.height = `${this.virtual.carousel.height}px`\n      } else {\n        this.shadow.carousel.style.width = `${this.virtual.carousel.width}px`\n      }\n    },\n\n    updateTransitionStyle(enableTransition: boolean) {\n      if (!this.shadow.container) return\n\n      // Set transition properties\n      if (enableTransition) {\n        this.shadow.container.style.transitionDuration = `${this.virtual.duration}ms`\n        this.shadow.container.style.transitionTimingFunction =\n          this.virtual.transitionTiming\n      } else {\n        this.shadow.container.style.transitionDuration = '0ms'\n        this.shadow.container.style.transitionTimingFunction = 'linear'\n      }\n    }\n  }\n\n  return instance\n}\n\n/**\n * Update Holo instance with new options\n */\nexport const updateHoloInstance = (\n  instance: HoloInstance,\n  options: Partial<HoloIOOptions>\n): HoloInstance => {\n  if (!instance || !instance.virtual) {\n    console.error('@Holo: Cannot update invalid instance')\n    return instance\n  }\n\n  // Filter valid attributes only\n  const validOptions = Object.entries(options).reduce((valid, [key, value]) => {\n    if (key in instance.virtual.io) {\n      return {...valid, [key]: value}\n    }\n    console.warn('@Holo: unknown carousel parameter:', key)\n    return valid\n  }, {})\n\n  // Update IO options immutably\n  const updatedIO = {\n    ...instance.virtual.io,\n    ...validOptions\n  }\n\n  // Update virtual state\n  instance.setState = {\n    ...instance.getVirtual,\n    io: updatedIO\n  }\n\n  return instance\n}\n","//src/components/holo-create-element.ts\n\nimport {CyreLog} from 'cyre'\nimport type {HoloIOOptions} from '../types/interface'\nimport {_holo} from '../libs/holo-essentials'\nimport setupIOManager from './holo-io-manager'\nimport {createHoloInstance} from '../core/holo-state'\nimport {registerNestedCarousel} from './holo-relations'\nimport {initializeAccordionMode} from './holo-accordion'\nimport {initializeDeepLinking} from './holo-deep-link'\nimport {CSS_CLASSES} from '../config/holo-config'\n\n/**\n * Create and initialize a carousel element\n * @param slide - DOM element to convert to carousel\n * @param io - Input/Output options\n */\nexport const holoCreateElement = (\n  slide: HTMLElement,\n  io: Partial<HoloIOOptions> = {}\n): string | null => {\n  if (!slide || !slide.nodeType) {\n    console.error('@Holo: Invalid DOM element provided')\n    return null\n  }\n\n  // Ensure slide has an ID\n  if (!slide.id) {\n    slide.id = `holo-${Date.now()}-${Math.floor(Math.random() * 10000)}`\n  }\n\n  try {\n    // Create and register the carousel instance\n    _holo[slide.id] = createHoloInstance(slide, io)\n\n    console.log('@Holo: Created carousel:', slide.id)\n\n    // Check if this carousel is inside another carousel (nested)\n    const parentCarousel = findParentCarousel(slide)\n    if (parentCarousel && parentCarousel.id !== slide.id) {\n      // This is a nested carousel\n      registerNestedCarousel(slide.id, parentCarousel.id)\n\n      // Apply special handling for nested carousels\n      applyNestedCarouselSettings(slide.id, parentCarousel.id)\n    }\n\n    // Initialize accordion mode if enabled\n    if (io.accordionMode) {\n      initializeAccordionMode(\n        _holo[slide.id].getVirtual,\n        _holo[slide.id].getShadow\n      )\n    }\n\n    // Initialize deep linking if enabled\n    if (io.deepLinking) {\n      initializeDeepLinking(slide.id)\n    }\n\n    // Setup event handlers\n    setupIOManager(_holo[slide.id].getVirtual, _holo[slide.id].getShadow)\n\n    return slide.id\n  } catch (error) {\n    console.error('@Holo: Error creating carousel:', error)\n    return null\n  }\n}\n\n/**\n * Find parent carousel element\n * @param element Element to check for carousel parent\n */\nconst findParentCarousel = (element: HTMLElement): HTMLElement | null => {\n  // Start with parent element\n  let parent = element.parentElement\n\n  // Traverse up the DOM tree\n  while (parent) {\n    // Check if this element is a holo carousel\n    if (parent.classList.contains(CSS_CLASSES.CAROUSEL)) {\n      return parent\n    }\n\n    // Move up to next parent\n    parent = parent.parentElement\n  }\n\n  return null\n}\n\n/**\n * Apply special settings for nested carousels\n * @param childId Child carousel ID\n * @param parentId Parent carousel ID\n */\nconst applyNestedCarouselSettings = (\n  childId: string,\n  parentId: string\n): void => {\n  const childVirtual = _holo[childId]?.getVirtual\n  if (!childVirtual) return\n\n  // Add data attribute to mark as nested\n  const childElement = document.getElementById(childId)\n  if (childElement) {\n    childElement.setAttribute('data-nested', 'true')\n    childElement.setAttribute('data-parent', parentId)\n  }\n\n  // Override some settings for better nested behavior\n  _holo[childId].setState = {\n    ...childVirtual,\n    io: {\n      ...childVirtual.io,\n      // These settings work better for nested carousels\n      nestedMode: 1,\n      wheel: 0 // Disable wheel to prevent confusing scrolling\n      // Keep other settings from user config\n    }\n  }\n\n  CyreLog.info(\n    `Applied nested carousel settings for ${childId} (parent: ${parentId})`\n  )\n}\n\n/**\n * Enhanced auto-initialize function that detects nested carousels\n * @param carouselName Class name to identify carousels\n */\nexport const holoInitiate = (\n  carouselName: string = CSS_CLASSES.CAROUSEL\n): void => {\n  console.log('@holo: auto activated:', carouselName)\n\n  // Get all elements with the specified class name\n  const carousels = document.getElementsByClassName(carouselName)\n\n  if (carousels.length === 0) {\n    console.log('@Holo: carousel structure not found')\n    return\n  }\n\n  // First, initialize top-level carousels\n  const initializedIds: string[] = []\n\n  Array.from(carousels).forEach(carousel => {\n    try {\n      const element = carousel as HTMLElement\n\n      // Skip if this is nested inside another carousel\n      if (findParentCarousel(element)) {\n        return\n      }\n\n      const id = holoCreateElement(element, {} as Partial<HoloIOOptions>)\n      if (id) {\n        initializedIds.push(id)\n      }\n    } catch (error) {\n      CyreLog.error('Error auto-initializing carousel:', error)\n    }\n  })\n\n  // Then, initialize nested carousels\n  Array.from(carousels).forEach(carousel => {\n    try {\n      const element = carousel as HTMLElement\n\n      // Skip if already initialized (top-level carousel)\n      if (initializedIds.includes(element.id)) {\n        return\n      }\n\n      // Skip if not nested\n      const parentCarousel = findParentCarousel(element)\n      if (!parentCarousel) {\n        return\n      }\n\n      const id = holoCreateElement(element, {\n        nestedMode: 1\n      } as Partial<HoloIOOptions>)\n\n      if (id) {\n        initializedIds.push(id)\n      }\n    } catch (error) {\n      CyreLog.error('Error auto-initializing nested carousel:', error)\n    }\n  })\n\n  CyreLog.info(`Auto-initialized ${initializedIds.length} carousels`)\n}\n","//src/core/holo-performance.ts\n\nimport {cyre, CyreLog} from 'cyre'\nimport {_holo} from '../libs/holo-essentials'\nimport {EVENTS, PERFORMANCE} from '../config/holo-config'\n\n// Track performance metrics over time\nconst performanceHistory: Array<{\n  timestamp: number\n  stress: number\n  totalProcessingTime: number\n  frameRate?: number\n  carouselCount: number\n}> = []\n\n/**\n * Initialize performance monitoring system\n */\nexport const initializePerformanceMonitoring = (): void => {\n  CyreLog.info('Initializing performance monitoring')\n\n  registerPerformanceEvents()\n  startPerformanceMonitoring()\n}\n\n/**\n * Get current performance metrics\n */\nexport const getPerformanceMetrics = () => {\n  // Get Cyre's built-in metrics\n  const cyreMetrics = cyre.getPerformanceState()\n\n  return {\n    ...cyreMetrics,\n    history: performanceHistory.slice(-PERFORMANCE.STRESS_HISTORY_SIZE)\n  }\n}\n\n/**\n * Register performance-related events\n */\nfunction registerPerformanceEvents(): void {\n  // Global performance monitoring\n  cyre.on('global_performance_check', () => {\n    // Get current Cyre performance metrics\n    const metrics = cyre.getPerformanceState()\n\n    // Create a snapshot\n    const snapshot = {\n      timestamp: Date.now(),\n      stress: metrics.stress,\n      totalProcessingTime: metrics.totalProcessingTime,\n      // Estimate frame rate based on stress level (just a rough approximation)\n      frameRate:\n        metrics.stress > 0.5 ? 30 - Math.floor(metrics.stress * 20) : 60,\n      carouselCount: Object.keys(_holo).length\n    }\n\n    // Add to history\n    performanceHistory.push(snapshot)\n\n    // Trim history if needed\n    if (performanceHistory.length > PERFORMANCE.STRESS_HISTORY_SIZE * 2) {\n      performanceHistory.splice(\n        0,\n        performanceHistory.length - PERFORMANCE.STRESS_HISTORY_SIZE\n      )\n    }\n\n    // Check if any carousels need optimization\n    const carousels = Object.keys(_holo)\n\n    if (metrics.stress > PERFORMANCE.STRESS_THRESHOLD_HIGH) {\n      // Apply aggressive optimizations to all carousels\n      carousels.forEach(id => {\n        cyre.call(EVENTS.PERFORMANCE_OPTIMIZE, {\n          id,\n          stress: metrics.stress,\n          level: 'high'\n        })\n      })\n    } else if (metrics.stress > PERFORMANCE.STRESS_THRESHOLD_MEDIUM) {\n      // Apply moderate optimizations to all carousels\n      carousels.forEach(id => {\n        cyre.call(EVENTS.PERFORMANCE_OPTIMIZE, {\n          id,\n          stress: metrics.stress,\n          level: 'medium'\n        })\n      })\n    }\n  })\n\n  // Apply optimizations to a specific carousel\n  cyre.on(EVENTS.PERFORMANCE_OPTIMIZE, payload => {\n    const {id, level} = payload\n\n    if (!id || !_holo[id]) return\n\n    const virtual = _holo[id].getVirtual\n\n    // Apply optimizations based on level\n    switch (level) {\n      case 'high':\n        // Disable animations, increase throttling\n        _holo[id].setState = {\n          ...virtual,\n          io: {\n            ...virtual.io,\n            animate: 0,\n            wheel: 0,\n            duration: Math.max(400, virtual.io.duration || 0)\n          }\n        }\n        CyreLog.info(`Applied high-level optimizations to carousel ${id}`)\n        break\n      case 'medium':\n        // Slow down animations\n        _holo[id].setState = {\n          ...virtual,\n          io: {\n            ...virtual.io,\n            duration: Math.max(300, virtual.io.duration || 0)\n          }\n        }\n        CyreLog.info(`Applied medium-level optimizations to carousel ${id}`)\n        break\n    }\n  })\n\n  // Configure actions\n  cyre.action([\n    {\n      id: 'global_performance_check',\n      interval: 5000, // Check every 5 seconds\n      repeat: true, // Run continuously\n      log: false\n    },\n    {\n      id: EVENTS.PERFORMANCE_OPTIMIZE,\n      throttle: 1000 // Apply optimizations at most once per second\n    }\n  ])\n}\n\n/**\n * Start the performance monitoring system\n */\nfunction startPerformanceMonitoring(): void {\n  // Start monitoring\n  cyre.call('global_performance_check')\n}\n\n/**\n * Apply optimizations to a carousel based on its specific needs\n * Can be called directly\n */\nexport const optimizeCarousel = (\n  id: string,\n  level: 'light' | 'medium' | 'aggressive'\n): void => {\n  if (!id || !_holo[id]) {\n    CyreLog.warn(`Cannot optimize carousel ${id}: not found`)\n    return\n  }\n\n  const virtual = _holo[id].getVirtual\n\n  // Apply optimizations based on level\n  switch (level) {\n    case 'aggressive':\n      // Disable animations, input handling, increase throttling\n      _holo[id].setState = {\n        ...virtual,\n        io: {\n          ...virtual.io,\n          animate: 0,\n          wheel: 0,\n          drag: 0,\n          swipe: 0,\n          duration: Math.max(500, virtual.io.duration || 0)\n        }\n      }\n      CyreLog.info(`Applied aggressive optimizations to carousel ${id}`)\n      break\n    case 'medium':\n      // Disable animations, slower transitions\n      _holo[id].setState = {\n        ...virtual,\n        io: {\n          ...virtual.io,\n          animate: 0,\n          wheel: 0,\n          duration: Math.max(400, virtual.io.duration || 0)\n        }\n      }\n      CyreLog.info(`Applied medium optimizations to carousel ${id}`)\n      break\n    case 'light':\n      // Just slow down animations\n      _holo[id].setState = {\n        ...virtual,\n        io: {\n          ...virtual.io,\n          duration: Math.max(300, virtual.io.duration || 0)\n        }\n      }\n      CyreLog.info(`Applied light optimizations to carousel ${id}`)\n      break\n  }\n}\n\n/**\n * Get performance history\n */\nexport const getPerformanceHistory = () => {\n  return performanceHistory.slice(-PERFORMANCE.STRESS_HISTORY_SIZE)\n}\n","//src/utils/debug.ts\n\nimport {CyreLog} from 'cyre'\nimport {_holo} from '../libs/holo-essentials'\n\n/**\n * Debug mode flag\n */\nlet DEBUG_MODE = false\n\n/**\n * Enable or disable debug mode\n */\nexport const setDebugMode = (enabled: boolean): void => {\n  DEBUG_MODE = enabled\n  CyreLog.info(`Debug mode ${enabled ? 'enabled' : 'disabled'}`)\n}\n\n/**\n * Toggle debug mode\n */\nexport const toggleDebugMode = (): boolean => {\n  DEBUG_MODE = !DEBUG_MODE\n  CyreLog.info(`Debug mode ${DEBUG_MODE ? 'enabled' : 'disabled'}`)\n  return DEBUG_MODE\n}\n\n/**\n * Log only in debug mode\n */\nexport const debugLog = (message: string, ...args: any[]): void => {\n  if (DEBUG_MODE) {\n    CyreLog.debug(message, ...args)\n  }\n}\n\n/**\n * Add visual debug overlays to carousels\n */\nexport const addDebugOverlays = (): void => {\n  if (!DEBUG_MODE) return\n\n  Object.keys(_holo).forEach(id => {\n    const carousel = document.getElementById(id)\n    if (!carousel) return\n\n    // Add debug class\n    carousel.classList.add('holo-debug')\n\n    // Create debug overlay if not exists\n    let debugOverlay = carousel.querySelector('.holo-debug-overlay')\n    if (!debugOverlay) {\n      debugOverlay = document.createElement('div')\n      debugOverlay.className = 'holo-debug-overlay'\n      carousel.appendChild(debugOverlay)\n    }\n\n    // Update debug info\n    const virtual = _holo[id].getVirtual\n    ;(debugOverlay as HTMLElement).innerHTML = `\n      <div class=\"holo-debug-info\">\n        <div>ID: ${id}</div>\n        <div>X: ${Math.round(virtual.transformX)}</div>\n        <div>Y: ${Math.round(virtual.transformY)}</div>\n        <div>End of Slide: ${virtual.endOfSlide}</div>\n        <div>Orientation: ${\n          virtual.io.orientation ? 'Vertical' : 'Horizontal'\n        }</div>\n      </div>\n    `\n  })\n}\n\n/**\n * Remove debug overlays\n */\nexport const removeDebugOverlays = (): void => {\n  document.querySelectorAll('.holo-debug-overlay').forEach(overlay => {\n    overlay.remove()\n  })\n  document.querySelectorAll('.holo-debug').forEach(element => {\n    element.classList.remove('holo-debug')\n  })\n}\n\n/**\n * Add debug CSS to the document\n */\nexport const injectDebugStyles = (): void => {\n  if (!DEBUG_MODE) return\n\n  const styleId = 'holo-debug-styles'\n  if (document.getElementById(styleId)) return\n\n  const style = document.createElement('style')\n  style.id = styleId\n  style.textContent = `\n    .holo-debug {\n      position: relative;\n    }\n    \n    .holo-debug-overlay {\n      position: absolute;\n      top: 0;\n      left: 0;\n      background: rgba(0, 0, 0, 0.7);\n      color: #fff;\n      padding: 5px;\n      border-radius: 3px;\n      font-size: 10px;\n      z-index: 9999;\n      pointer-events: none;\n    }\n    \n    .holo-debug .holo-container {\n      outline: 1px solid rgba(255, 0, 0, 0.5);\n    }\n    \n    .holo-debug .holo {\n      outline: 1px dashed rgba(0, 255, 0, 0.5);\n    }\n  `\n  document.head.appendChild(style)\n}\n\n/**\n * Monitor carousel performance and state changes\n */\nexport const enableStateMonitoring = (): (() => void) => {\n  if (!DEBUG_MODE) return () => {}\n\n  const intervalId = setInterval(() => {\n    addDebugOverlays()\n  }, 500)\n\n  return () => clearInterval(intervalId)\n}\n\n/**\n * Initialize debugging tools\n */\nexport const initializeDebugTools = (enabled: boolean = false): void => {\n  setDebugMode(enabled)\n\n  if (enabled) {\n    injectDebugStyles()\n    const stopMonitoring = enableStateMonitoring()\n\n    // Add to window for console access\n    ;(window as any).holoDebug = {\n      toggleDebugMode,\n      addDebugOverlays,\n      removeDebugOverlays,\n      getDatabaseState: () => ({..._holo}),\n      stopMonitoring\n    }\n  }\n}\n","//src/app.ts\n\n/* \n    Neural Line\n    Reactive Carousel\n    H.O.L.O - C.A.R.O.U.S.E.L\n    Version 3.5.0 (2025)\n*/\n\nimport {cyre, CyreLog} from 'cyre'\nimport type {HoloIOOptions} from './types/interface'\nimport {holoCreateElement} from './components/holo-create-element'\nimport {_holo} from './libs/holo-essentials'\nimport {holoInitiate} from './components/holo-create-element'\nimport {EVENTS, DEFAULT_IO_OPTIONS, CSS_CLASSES} from './config/holo-config'\nimport {\n  safeEventCall,\n  createEventIds,\n  initializeEventSystem,\n  initializeInstanceEvents\n} from './core/holo-events'\nimport {\n  handleTouchStart,\n  handleNestedTouchStart,\n  injectTouchStyles,\n  initializeTouchSystem\n} from './components/holo-touch'\nimport {\n  getCurrentSlideIndex,\n  updateActiveSlide,\n  forceRefreshAllCarousels,\n  calculateCarouselDimensions\n} from './libs/holo-dom'\nimport {\n  initializePerformanceMonitoring,\n  getPerformanceHistory,\n  optimizeCarousel\n} from './core/holo-performance'\nimport {\n  goToNextSlide,\n  goToPrevSlide,\n  goToFirstSlide,\n  goToLastSlide,\n  goToSlide\n} from './libs/holo-navigation'\nimport {initializeDebugTools} from './libs/debug'\n\n// Import new feature modules\nimport {\n  registerNestedCarousel,\n  unregisterCarousel,\n  getChildren,\n  getParent,\n  getAncestors,\n  getDescendants\n} from './components/holo-relations'\nimport {\n  convertToAccordion,\n  convertToCarousel,\n  toggleAccordion,\n  openAccordionPanel,\n  closeAccordionPanel,\n  injectAccordionStyles\n} from './components/holo-accordion'\nimport {\n  initializeDeepLinking,\n  enableDeepLinking,\n  disableDeepLinking,\n  navigateToDeepLink,\n  getDeepLinkPath\n} from './components/holo-deep-link'\n\n// Update the updateCarouselOptions function in app.ts\n\nfunction updateCarouselOptions(\n  id: string,\n  options: Partial<HoloIOOptions> = {}\n): {ok: boolean; data: HoloIOOptions | string} {\n  try {\n    if (!_holo[id]) {\n      return {ok: false, data: `Carousel with ID ${id} not found`}\n    }\n\n    const virtual = _holo[id].getVirtual\n\n    // Filter valid options\n    const validOptions = Object.entries(options).reduce((acc, [key, value]) => {\n      if (key in DEFAULT_IO_OPTIONS) {\n        return {...acc, [key]: value}\n      }\n      CyreLog.warn(`Invalid option ignored: ${key}`)\n      return acc\n    }, {})\n\n    // CRITICAL FIX: Special handling for animation\n    if ('animate' in validOptions) {\n      // Clean up any existing animation event\n      if (virtual.eventIds?.animate) {\n        cyre.forget(virtual.eventIds.animate)\n        CyreLog.info(`Removed existing animation for carousel ${id}`)\n      }\n    }\n\n    // Special handling for accordion mode\n    if ('accordionMode' in validOptions && validOptions.accordionMode === 1) {\n      convertToAccordion(id)\n    }\n\n    // Special handling for deep linking\n    if ('deepLinking' in validOptions && validOptions.deepLinking === 1) {\n      enableDeepLinking(id)\n    }\n\n    // Create updated options\n    const updatedIO = {\n      ...virtual.io,\n      ...validOptions\n    }\n\n    // Update state\n    _holo[id].setState = {\n      ..._holo[id].getVirtual,\n      io: updatedIO\n    }\n\n    // Re-initialize instance events with new options\n    // This will properly set up the animation if enabled\n    initializeInstanceEvents(id, updatedIO)\n\n    CyreLog.info(`Carousel ${id} options updated successfully`)\n\n    return {ok: true, data: updatedIO}\n  } catch (error) {\n    CyreLog.error('Error updating carousel options:', error)\n    return {\n      ok: false,\n      data: error instanceof Error ? error.message : 'Unknown error'\n    }\n  }\n}\n\n/**\n * Get carousel dimensions and state\n */\nfunction getCarouselDimensions(id: string) {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return null\n  }\n  return _holo[id].getDimensions\n}\n\n/**\n * Get carousel state\n */\nfunction getCarouselState(id: string) {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return null\n  }\n  return _holo[id].getVirtual\n}\n\n/**\n * Refresh all carousels with more robust error handling\n */\nfunction refreshAllCarousels(): void {\n  try {\n    const carouselIds = Object.keys(_holo)\n    if (carouselIds.length === 0) {\n      CyreLog.info('No carousels to refresh')\n      return\n    }\n\n    CyreLog.info(`Refreshing ${carouselIds.length} carousels`)\n\n    // First trigger a global refresh\n    cyre.call(EVENTS.REFRESH_SCREEN)\n\n    // Then refresh each carousel individually to ensure all are updated\n    carouselIds.forEach(id => {\n      try {\n        if (!_holo[id]?.getShadow?.carousel) {\n          CyreLog.warn(\n            `Missing DOM elements for carousel ${id}, skipping refresh`\n          )\n          return\n        }\n\n        // Ensure the carousel element is visible in the DOM\n        const isVisible =\n          _holo[id].getShadow.carousel.offsetWidth > 0 ||\n          _holo[id].getShadow.carousel.offsetHeight > 0\n\n        if (!isVisible) {\n          CyreLog.warn(`Carousel ${id} not visible in DOM, skipping refresh`)\n          return\n        }\n\n        // Call refresh with current state\n        cyre.call(EVENTS.REFRESH_CAROUSEL, _holo[id].getState)\n      } catch (innerError) {\n        CyreLog.error(`Error refreshing carousel ${id}:`, innerError)\n      }\n    })\n  } catch (error) {\n    CyreLog.error('Error in global refresh:', error)\n  }\n}\n\n/**\n * Setup window resize handler\n */\nfunction setupWindowResizeHandler(): void {\n  // Configure resize event with throttling\n  cyre.action({\n    id: 'window-resize',\n    throttle: 200,\n    log: false\n  })\n\n  // Register resize handler\n  cyre.on('window-resize', () => {\n    return {\n      id: EVENTS.REFRESH_SCREEN,\n      payload: null\n    }\n  })\n\n  // Add event listener\n  window.addEventListener(\n    'resize',\n    () => {\n      cyre.call('window-resize')\n    },\n    {passive: true}\n  )\n}\n\n/**\n * Initialize the Holo carousel system\n * Prepares the global event system\n */\nfunction initialize(selector: string = CSS_CLASSES.CAROUSEL): string {\n  CyreLog.info(`Initializing Holo with selector: ${selector}`)\n\n  // Inject CSS for features\n  injectTouchStyles()\n  injectAccordionStyles()\n\n  // Schedule a refresh when everything is loaded\n  window.addEventListener('load', () => {\n    // First fast refresh\n    refreshAllCarousels()\n\n    // Then a more thorough refresh with delay to ensure dimensions are calculated\n    setTimeout(() => {\n      forceRefreshAllCarousels().then(() => {\n        CyreLog.info('Force refresh completed successfully')\n      })\n    }, 300)\n  })\n\n  // Return the selector for chaining\n  return selector\n}\n\n/**\n * Navigate to next slide\n */\nfunction nextSlide(id: string): void {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return\n  }\n\n  // Use the navigation function from our shared library\n  goToNextSlide(_holo[id].getVirtual)\n}\n\n/**\n * Navigate to previous slide\n */\nfunction prevSlide(id: string): void {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return\n  }\n\n  // Use the navigation function from our shared library\n  goToPrevSlide(_holo[id].getVirtual)\n}\n\n/**\n * Go to first slide\n */\nfunction firstSlide(id: string): void {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return\n  }\n\n  // Use the navigation function from our shared library\n  goToFirstSlide(_holo[id].getVirtual)\n}\n\n/**\n * Go to last slide\n */\nfunction lastSlide(id: string): void {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return\n  }\n\n  // Use the navigation function from our shared library\n  goToLastSlide(_holo[id].getVirtual)\n}\n\n/**\n * Go to specific slide index\n */\nfunction goToSlideById(id: string, index: number): void {\n  if (!_holo[id]) {\n    CyreLog.warn(`Carousel with ID ${id} not found`)\n    return\n  }\n\n  // Use the navigation function from our shared library\n  goToSlide(_holo[id].getVirtual, index)\n}\n\n/**\n * Get current position index\n */\nfunction getCurrentPosition(id: string): number {\n  if (!_holo[id]) return 0\n\n  // Use the slide index calculation from our shared library\n  return getCurrentSlideIndex(_holo[id].getVirtual)\n}\n\n/**\n * Apply performance optimizations to a carousel\n */\nfunction optimizeCarouselPerformance(\n  id: string,\n  level: 'light' | 'medium' | 'aggressive'\n): void {\n  optimizeCarousel(id, level)\n}\n\n// Initialize the event system immediately\nCyreLog.info(\n  '%c HOLO - Initializing Holo Carousel v3.5.0 ',\n  'background: #022d5f; color: white; display: block;'\n)\n\n// Enable debug tools (can be toggled via query param ?debug=true)\nconst urlParams =\n  typeof window !== 'undefined'\n    ? new URLSearchParams(window.location.search)\n    : null\nconst debugEnabled = urlParams?.has('debug') || false\ninitializeDebugTools(debugEnabled)\n\n// Initialize core systems\ninitializeEventSystem()\n\n// Initialize the touch system\ninitializeTouchSystem()\n\n// Initialize performance monitoring\ninitializePerformanceMonitoring()\n\n// Register window resize handler\nsetupWindowResizeHandler()\n\n/**\n * Convert a normal carousel to a nested child\n */\nfunction makeNested(childId: string, parentId: string): void {\n  if (!_holo[childId] || !_holo[parentId]) {\n    CyreLog.error(`Invalid carousel IDs for nesting: ${childId}, ${parentId}`)\n    return\n  }\n\n  // Register the relationship\n  registerNestedCarousel(childId, parentId)\n\n  // Update child's options\n  updateCarouselOptions(childId, {\n    nestedMode: 1,\n    wheel: 0 // Disable wheel on nested carousels\n  })\n\n  // Add data attributes\n  const childElement = document.getElementById(childId)\n  if (childElement) {\n    childElement.setAttribute('data-nested', 'true')\n    childElement.setAttribute('data-parent', parentId)\n  }\n\n  CyreLog.info(`Carousel ${childId} is now nested inside ${parentId}`)\n}\n\n/**\n * Get nested carousel details\n */\nfunction getNestedInfo(id: string): {\n  isNested: boolean\n  parent?: string\n  children: string[]\n  ancestors: string[]\n  descendants: string[]\n} {\n  return {\n    isNested: !!getParent(id),\n    parent: getParent(id),\n    children: getChildren(id),\n    ancestors: getAncestors(id),\n    descendants: getDescendants(id)\n  }\n}\n\n// Create and export the Holo API\nconst Holo = {\n  // Core initialization\n  INIT: initialize,\n  AUTO: holoInitiate,\n  BUILD: holoCreateElement,\n\n  // Configuration and state access\n  carousel: updateCarouselOptions,\n  dimensions: getCarouselDimensions,\n  getState: getCarouselState,\n  getPosition: getCurrentPosition,\n\n  // Navigation\n  next: nextSlide,\n  prev: prevSlide,\n  first: firstSlide,\n  last: lastSlide,\n  goTo: goToSlideById,\n\n  // System operations\n  refresh: refreshAllCarousels,\n  getPerformanceHistory,\n  optimize: optimizeCarouselPerformance,\n\n  // Touch handling\n  handleTouchStart,\n\n  // Nested carousel features\n  makeNested,\n  getNestedInfo,\n\n  // Accordion features\n  toAccordion: convertToAccordion,\n  toCarousel: convertToCarousel,\n  toggleAccordion,\n  openAccordion: openAccordionPanel,\n  closeAccordion: closeAccordionPanel,\n\n  // Deep linking features\n  enableDeepLinking,\n  disableDeepLinking,\n  getDeepLink: getDeepLinkPath,\n  navigateToDeepLink,\n\n  // Constants\n  EVENTS\n}\n\n// Export for module use\nexport default Holo\n\n// Also expose to window for UMD/browser usage\nif (typeof window !== 'undefined') {\n  ;(window as any).Holo = Holo\n}\n"],"names":["e","t","reset","magenta","magentaBright","red","redBright","green","greenBright","cyan","cyanBright","yellow","yellowBright","white","whiteBright","blue","blueBright","bgRed","bgYellow","bgBlue","bold","dim","italic","underline","r","DEBUG","INFO","WARN","ERROR","SUCCESS","o","process","versions","node","i","window","a","n","s","c","u","l","Date","toISOString","Error","message","stack","JSON","stringify","String","console","reduce","stdout","write","error","warn","info","debug","success","WeakMap","has","set","get","Object","is","Array","isArray","length","every","keys","d","RECUPERATION","MAX_TIMEOUT","Math","pow","m","p","g","f","y","h","b","v","E","k","I","T","w","R","A","M","$","C","x","O","S","D","N","q","MIN","BASE","MAX","RECOVERY","U","HIGH","CRITICAL","B","MAX_CPU","MAX_MEMORY","MAX_EVENT_LOOP","MAX_CALL_RATE","_","system","cpu","memory","eventLoop","isOverloaded","breathing","breathCount","currentRate","lastBreath","now","stress","isRecuperating","recuperationDepth","pattern","nextBreathDue","performance","callsTotal","callsPerSecond","lastCallTimestamp","activeQueues","critical","high","medium","low","background","queueDepth","callRate","combined","lastUpdate","inRecuperation","hibernating","activeFormations","F","Map","size","from","slice","forEach","delete","forget","clear","getAll","values","L","P","min","max","X","exp","j","recuperationInterval","freeze","update","updateBreath","recordCall","e2","isHealthy","shouldAllowCall","H","V","G","z","W","Y","intervalId","clearInterval","Q","id","timestamp","type","lastExecutionTime","executionCount","errors","detectChanges","payload","priority","level","J","K","Z","ee","te","re","oe","fn","ie","ae","ne","se","ce","timeoutId","clearTimeout","ue","le","de","filter","status","me","ok","done","pe","skipped","skipReason","ge","intraLink","fe","log","ye","isValid","he","entries","required","map","push","join","interval","timeOfCreation","be","code","subscriber","trim","ve","Boolean","Ee","async","isActive","callback","metrics","totalExecutions","successfulExecutions","longestExecutionTime","shortestExecutionTime","averageExecutionTime","repeat","Ie","failedExecutions","ke","duration","abs","originalDuration","nextExecutionTime","setTimeout","isInRecuperation","env","NODE_ENV","hrtime","setImmediate","floor","Te","crypto","randomUUID","startTime","missedExecutions","days","hours","minutes","seconds","milliseconds","kind","value","we","Re","Ae","Me","Number","isInteger","group","middleware","throttle","debounce","at","$e","round","toFixed","executionTime","exit","addEventListener","on","initialize","call","action","shutdown","pause","resume","hasChanged","getPreviousPayload","getBreathingState","getPerformanceState","totalProcessingTime","totalCallTime","totalStress","getMetrics","formations","breathingSync","Ce","Cyre","CyreLog","cyre","cancel","default","isEqual","memoize","pipe","tryCatch","version","defineProperties","__esModule","Symbol","toStringTag","TOUCH_EVENTS","EVENTS","INIT_CAROUSEL","INIT_DIMENSIONS","STATE_UPDATE","STATE_BATCH_UPDATE","REFRESH_CAROUSEL","REFRESH_SCREEN","SNAP_TO_POSITION","SNAP","TRANSFORM_COMPLETE","ANIMATE_FORWARD","ANIMATE_BACKWARD","NEXT_SLIDE","PREV_SLIDE","FIRST_SLIDE","LAST_SLIDE","GO_TO_SLIDE","ACTIVATE","BRING_TO_FOCUS","WHEEL_EVENT","KEYBOARD_EVENT","SHAKE","ERROR_HANDLER","PERFORMANCE_MONITOR","PERFORMANCE_OPTIMIZE","ANIMATION","PERFORMANCE","DEFAULT_IO_OPTIONS","enabled","wheel","controller","drag","swipe","snap","focus","animate","animateDirection","loop","orientation","active","onClick","onDoubleClick","CSS_CLASSES","touchState","virtual","startX","startY","currentX","currentY","lastX","lastY","distanceX","distanceY","directionX","directionY","velocityX","velocityY","startTransformX","startTransformY","pressed","multiplier","targetElement","moved","isNested","DEFAULT_DEEP_LINKING_OPTIONS","paramPrefix","updateHistory","scrollToCarousel","nestedSeparator","calculateCarouselDimensions","shadow","container","carousel","cyreExports","offsetWidth","offsetHeight","originalCarouselStyle","style","cssText","originalContainerStyle","visibility","display","slides","children","parentWidth","parentElement","clientWidth","innerWidth","parentHeight","clientHeight","innerHeight","flexGap","getComputedStyle","gap","gapValue","parseInt","isNaN","gapVar","document","documentElement","getPropertyValue","rowGap","columnGap","getFlexGap","totalWidth","totalHeight","maxSlideWidth","maxSlideHeight","slide","index","originalSlideStyle","marginLeft","marginRight","marginTop","marginBottom","slideWidth","slideHeight","numberOfSlots","item","carouselWidth","io","carouselHeight","containerWidth","containerHeight","endOfSlidePosition","slideWithGap","width","height","actualWidth","actualHeight","slideWithGapWidth","slideWithGapHeight","noOfChildren","forceCalculateCarouselDimensions","Promise","resolve","_holo","state","getState","updatedVirtual","setDimension","retryVirtual","getCurrentSlideIndex","slideDimension","position","transformY","transformX","applyTransform","light","calculatedEndPosition","endOfSlide","transformYLite","snapToGrid","transformXLite","goToNextSlide","currentPosition","currentIndex","maxIndex","nextIndex","newTransform","minPosition","newPosition","goToPrevSlide","prevIndex","goToFirstSlide","goToLastSlide","lastSlidePosition","absoluteEndPosition","finalPosition","goToSlide","safeIndex","activateSlide","element","offsets","selectedIndex","selectedElement","querySelector","findIndex","getSlideOffsets","querySelectorAll","el","classList","remove","add","animateCarousel","directionForward","createEventIds","prevSlide","nextSlide","lastSlide","firstSlide","activate","refresh","transform","stateUpdate","dimensionUpdate","initializeInstanceEvents","options","getVirtual","eventIds","setState","eventId","gridSize","_holoRelationships","registerNestedCarousel","childId","parentId","parentLevel","childLevel","childIds","includes","getAncestors","ancestors","currentId","getDescendants","result","current","pop","getChildren","getParent","handleTouchStart","event","preventDefault","stopPropagation","handleNestedTouchStart","calculateSwipeSpeed","distance","timeElapsed","isClickEvent","injectTouchStyles","getElementById","createElement","textContent","head","appendChild","_deepLinkingOptions","initializeDeepLinking","applyHashNavigation","_holoDeepLinkingInitialized","slideIndex","updateUrlHash","hash","location","substring","params","URLSearchParams","paramName","parts","split","scrollIntoView","behavior","block","processNestedNavigation","pathParts","childIndex","childVirtual","nestedPath","buildNestedPath","newHash","toString","history","pushState","path","childElement","slideElement","contains","indexOf","childSlideIndex","childPath","enableDeepLinking","DEFAULT_ACCORDION_OPTIONS","mode","expand","defaultOpen","animation","headerHeight","headerWidth","initializeAccordionMode","accordionMode","panels","panelDimensions","panel","originalStyle","overflow","expandedDimensions","isVertical","collapsedHeight","accordionOptions","collapsedWidth","maxHeight","maxWidth","accordionState","openPanels","previouslyOpen","expandedHeight","expandedWidth","applyAccordionState","setupAccordionEvents","header","className","title","innerHTML","outerHTML","firstChild","insertBefore","content","child","toggleAccordionPanel","panelIndex","idx","getShadow","isOpen","toggle","transition","transitionTiming","calculateAccordionDimensions","injectAccordionStyles","convertToAccordion","setAttribute","setupDomEventHandlers","nestedLevel","handleMouseDown","passive","touchStartHandler","wheelHandler","deltaY","handleWheel","prevButton","nextButton","handleResize","createDefaultIOOptions","createHoloInstance","getElementsByClassName","description","transformZ","startNumber","createDefaultVirtual","childrenCount","initializedVirtual","stateUpdatedId","this","getDimensions","car","con","updateDOMTransform","updateDOMDimensions","updateStyle","updateTransitionStyle","enableTransition","transitionDuration","transitionTimingFunction","holoCreateElement","nodeType","random","parentCarousel","findParentCarousel","applyNestedCarouselSettings","deepLinking","setupIOManager","parent","nestedMode","performanceHistory","DEBUG_MODE","toggleDebugMode","addDebugOverlays","debugOverlay","removeDebugOverlays","overlay","updateCarouselOptions","data","validOptions","acc","key","updatedIO","refreshAllCarousels","carouselIds","innerError","urlParams","search","setDebugMode","styleId","injectDebugStyles","stopMonitoring","setInterval","enableStateMonitoring","holoDebug","getDatabaseState","initializeDebugTools","source","changes","property","visibilityState","virtualId","transformedVirtual","safeX","safeY","ancestorId","pauseParentCarousels","clientX","touches","clientY","target","newTransformX","newTransformY","elapsed","touchData","removeAttribute","carouselId","velocity","absVelocity","direction","closestItem","closest","constrainedVirtual","handlePointerMove","handlePointerEnd","registerDomEventListeners","initializeTouchSystem","snapshot","frameRate","carouselCount","splice","carousels","Holo","INIT","selector","forceRefreshAllCarousels","then","AUTO","carouselName","initializedIds","BUILD","dimensions","getPosition","next","prev","first","last","goTo","getPerformanceHistory","optimize","optimizeCarousel","makeNested","getNestedInfo","descendants","toAccordion","toCarousel","toggleAccordion","openAccordion","closeAccordion","disableDeepLinking","getDeepLink","navigateToDeepLink"],"mappings":"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","x_google_ignoreList":[0]}